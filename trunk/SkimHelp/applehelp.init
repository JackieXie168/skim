# -*-perl-*-

# undefined localizations, localization doesn't seem to work
# $LANGUAGES->{'it'} = $LANGUAGES->{'en'};
# $LANGUAGES->{'it'}->{'cover (top) of document'} = 'copertina (in testa) del documento';

# External stylesheet:
$CSS_LINES = "<link href=\"sty/skimhelp.css\" rel=\"stylesheet\" media=\"all\" />";

@MISC_BUTTONS = ('Top');
@SECTION_BUTTONS = @MISC_BUTTONS;
@CHAPTER_BUTTONS = @MISC_BUTTONS;
@NODE_FOOTER_BUTTONS = ();
# horizontal rules
$SMALL_RULE = '';
$DEFAULT_RULE = '';
$MIDDLE_RULE = '';
$BIG_RULE = '';

$DO_CONTENTS = 0;
$SECTION_NAVIGATION = 1;
$WORDS_IN_PAGE = 1000000;

# an image
$image = \&appleHelp_image;

sub appleHelp_image
{
   my $file = shift;
   my $base = shift;
   my $preformatted = shift;
   my $file_name = shift;
   return "[ $base ]" if ($preformatted);
   return "<img src=\"$file_name\" alt=\"$base\" />";
}

# indexes
$index_summary = \&appleHelp_index_summary;
$index_letter = \&appleHelp_index_letter;
$print_index = \&appleHelp_print_index;
$index_entry = \&appleHelp_index_entry;

sub appleHelp_index_summary($$)
{
    my $alpha = shift;
    my $nonalpha = shift;
    return "";
}

sub appleHelp_index_letter($$$)
{
    my $letter = shift;
    my $id = shift;
    my $text = shift;
}

sub appleHelp_print_index($$)
{
    my $text = shift;
    my $name = shift;
    return "<table border=\"0\" class=\"index-$name\">\n" . $text . "</table>\n";
}

sub appleHelp_index_entry($$$$)
{
    my $text_href = shift;
    my $entry = shift;
    my $element_href = shift;
    my $element_text = shift;
    
    return '<tr><td valign="top">' . &$anchor('', $element_href, $entry) . "</td></tr>\n";
}

# headings
$element_heading = \&appleHelp_element_heading;

sub appleHelp_element_heading
{
    my $element = shift;
    my $command = shift;
    my $texi_line = shift;
    my $line = shift;
    my $in_preformatted = shift;
    my $one_section = shift;
    my $element_heading = shift;
    my $first_in_page = shift;
    my $is_top = shift;
    my $previous_is_top = shift;
    my $command_line = shift;
    my $element_id = shift;
    my $new_element = shift;

    my $result = '';
    my $label = &$element_label($element_id, $element, $command, $command_line);
    my $el_heading = '';
    if ($new_element and !$one_section)
    {
       $result .= "<div class=\"anchor\">\n" . $label . "</div>\n";
       if (!$element->{'element_ref'}->{'top'})
       {
          $result .= &$print_element_header($first_in_page, $previous_is_top);
          $result .= "<div class=\"mainbox\">\n" if $first_in_page;
       }
       else
       {
          $result .= "<div class=\"topmainbox\">\n" if $first_in_page;
       }
    }
    else
    {
       $result .= $label;
    }
    if ($element_heading)
    {
       $el_heading .= &$heading($element, $command, $texi_line, $line, $in_preformatted, $one_section, $element_heading);
       if ($first_in_page and $is_top)
       {
          $result .= "<div class=\"toptitlebox\">\n" . $el_heading . "</div>\n" . "<div class=\"topcontentbox\">\n";
       }
       else
       {
          $result .= $el_heading;
       }
    }
    return $result;
}

# headers
$print_page_head = \&appleHelp_print_page_head;

sub appleHelp_print_page_head
{
    my $fh = shift;
    my $shorttitle = "$Texi2HTML::THISDOC{'fulltitle_simple_format'}";
    $shorttitle = $Texi2HTML::SIMPLE_TEXT{'This'} if (defined ($Texi2HTML::SIMPLE_TEXT{'This'}) and ($Texi2HTML::SIMPLE_TEXT{'This'} !~ /^\s*$/) and $SPLIT);
    my $longtitle = "$Texi2HTML::THISDOC{'fulltitle_simple_format'}";
    $longtitle .= ": $Texi2HTML::SIMPLE_TEXT{'This'}" if (defined ($Texi2HTML::SIMPLE_TEXT{'This'}) and ($Texi2HTML::SIMPLE_TEXT{'This'} !~ /^\s*$/) and $SPLIT);
    my $description = $DOCUMENT_DESCRIPTION;
    $description = $shorttitle if (!defined($description));
    $description = "<meta name=\"description\" content=\"$description\" />" if
         ($description ne '');
    $description = $Texi2HTML::THISDOC{'documentdescription'} if (defined($Texi2HTML::THISDOC{'documentdescription'}));
    my $encoding = '';
    $encoding = "<meta http-equiv=\"Content-Type\" content=\"text/html; charset=$ENCODING\" />" if (defined($ENCODING) and ($ENCODING ne ''));
    print $fh <<EOT;
$DOCTYPE
<html>
$Texi2HTML::THISDOC{'copying'}<!-- Created on $Texi2HTML::THISDOC{today} by $Texi2HTML::THISDOC{program} -->
<!--
$Texi2HTML::THISDOC{program_authors}
-->
<head>
<title>$longtitle</title>

$description
<meta name="keywords" content="$longtitle" />
<meta name="resource-type" content="document" />
<meta name="distribution" content="global" />
<meta name="Generator" content="$Texi2HTML::THISDOC{program}" />
$encoding
$CSS_LINES
$EXTRA_HEAD
</head>

<body $BODYTEXT>
$AFTER_BODY_OPEN
EOT
}

# footers
$print_page_foot = \&appleHelp_print_page_foot;
$print_Top_footer = \&appleHelp_print_page_foot;

sub appleHelp_print_page_foot
{
    $fh = shift;
    print $fh <<EOT;
</div>
$PRE_BODY_CLOSE
</body>
</html>
EOT
}

# head and foot navigation
$print_head_navigation = \&appleHelp_print_head_navigation;
$print_foot_navigation = \&appleHelp_print_foot_navigation;

sub appleHelp_print_head_navigation
{
    my $fh = shift;
    my $buttons = shift;

    my $result = '';
    $result .= "<div class=\"banner\">\n";
    for my $button (@$buttons)
    {
        if ($Texi2HTML::HREF{$button})
        {
        my $btitle = $BUTTONS_GOTO{$button} ?
            'title="' . ucfirst($BUTTONS_GOTO{$button}) . '"' : '';
            $result .= "" .
                  &$anchor('',
                              $Texi2HTML::HREF{$button},
                              $Texi2HTML::NAME{$button},
                              $btitle
                             );
        }
    }
    $result .= "\n</div>\n";

    print $fh $result if (defined($fh));
    return $result;
}

sub appleHelp_print_foot_navigation
{
    my $fh = shift;
    my $buttons = shift;
}

$print_Top = \&appleHelp_print_Top;

sub appleHelp_print_Top
{
    my $fh = shift;
    my $has_top_heading = shift;
    my $element = shift;

    # for redefining navigation buttons use:
    # my $buttons = [...];
    # as it is, 'Top', 'Contents', 'Index', 'About' are printed
    my $buttons = \@MISC_BUTTONS;

    my $nw;
    # a dirty hack. A section is considered to be empty if there are 2
    # lines or less in it. Indeed, this catches the sectionning command like
    # @top and the @node.
    if (scalar(@$Texi2HTML::THIS_SECTION) > 2)
    {
        # if top-level node has content
        $nw = main::print_lines($fh, $Texi2HTML::THIS_SECTION);
        # this is to close the topcontentbox div
        print $fh "</div>\n";
    }
    else
    {
        # top-level node is fully enclosed in @ifnothtml
        # print fulltitle, subtitle, author, Overview or table of contents
        # redo the titlepage with the actual state
        my ($titlepage_text, $titlepage_no_texi, $titlepage_simple_format) = main::do_special_region_lines('titlepage',$Texi2HTML::THISDOC{'state'});

        &$titlepage([],$titlepage_text, $titlepage_no_texi, $titlepage_simple_format); 
        # only print the header and node label
        print $fh $Texi2HTML::THIS_SECTION->[0];
        print $fh $Texi2HTML::TITLEPAGE;
        if (@{$Texi2HTML::OVERVIEW} and !$Texi2HTML::THISDOC{'setshortcontentsaftertitlepage'})
        {
             print $fh '<h2> ' . $Texi2HTML::NAME{'Overview'} . "</h2>\n" . "<blockquote\n";
             my $nw = main::print_lines($fh, $Texi2HTML::OVERVIEW);
             print $fh "</blockquote>\n";
        }
        elsif (@{$Texi2HTML::TOC_LINES} and !$Texi2HTML::THISDOC{'setcontentsaftertitlepage'})
        {
             print $fh '<h1> ' . $Texi2HTML::NAME{'Contents'}  . "</h1>\n";
             my $nw = main::print_lines($fh, $Texi2HTML::TOC_LINES);
        }
    }
}
