\input texinfo @c -*-texinfo-*-
@c This is the manual for BibDesk.

@c ======================================================================================
@c Document info
@c ======================================================================================
@c
@setfilename bibdesk.info

@c get versions of the manual and program from a separate file
@include version.texi

@c define an index for preference setting entries
@defindex pref

@settitle BibDesk Help
@setchapternewpage odd
@footnotestyle separate
@ifset shorttitlepage-enabled
@shorttitlepage BibDesk v@value{VERSION}
@end ifset

@c ======================================================================================
@c Macro definitions
@c ======================================================================================

@c macros for keyboard shortcuts

@macro cmd {key}
@html
&#8984;\key\
@end html
@ifnothtml
Cmd-\key\
@end ifnothtml
@end macro

@macro shiftcmd {key}
@html
&#8679;&#8984;\key\
@end html
@ifnothtml
Shift-Cmd-\key\
@end ifnothtml
@end macro

@macro optcmd {key}
@html
&#8997;&#8984;\key\
@end html
@ifnothtml
Option-Cmd-\key\
@end ifnothtml
@end macro

@c Some macros for typesetting menu and button titles.

@macro menutitle {text}
``\text\''
@end macro

@macro buttontitle {text}
``\text\''
@end macro

@c A macro for preference items. Includes in the preferences index.

@macro prefitem {text}
@prefindex \text\
@emph{\text\:}
@end macro

@c A macro for search-result abstracts

@macro abstract{text}
@html
<META NAME="DESCRIPTION" CONTENT="\text\">
@end html
@end macro

@c Use a @node command before every sectioning command.
@c Make sure that each node is included in a menu of a node one level higher. 
@c Usually, the menu comes just before the lower level sectioning commands. 
@c Use @heading in chapters and appendixes and @subheading in (sub)sections

@c ======================================================================================
@c The content of the Help Pages starts here...
@c ======================================================================================

@ifnottex
@node Top
@top BibDesk 

@image{gfx/bibDeskIcon}
@heading About BibDesk

BibDesk @value{VERSION} is a BibTeX editor and reference manager. Because it is a
BibTeX editor, it is important to understand at least a few things
about the BibTeX file format.

@enumerate

@item If you already have a BibTeX database and are moving from hand-editing
      or another BibTeX editor, start at the @ref{Quick Start}.

@item If you are just getting started keeping track of references or are
  moving from a program such as EndNote or
  another reference manager, see the @ref{BibTeX Intro}.
@end enumerate

@heading Help Topics
@menu

* Quick Start::         For those who are already familiar with BibTeX
* BibTeX Intro::        For those who need to know more about BibTeX
* Opening and Importing Files:: Opening new and existing files of different formats
* Searching Your Database:: Searching references in the BibDesk database
* Managing References:: Browsing, adding, and editing references
* Citation Keys::       Automatically generating citation keys
* AutoFile::            Keeping local copies of articles organized
* Inserting Citations:: Adding citation commands in your favorite editor
* Preferences Guide::   Setting preferences for BibDesk
* AppleScript::         Automating tasks using AppleScript
* Getting More Help::   Where to find more answers about BibDesk
@end menu

@heading Online Resources
@itemize
@item @uref{http://bibdesk.sourceforge.net, BibDesk Website}
@item @uref{http://bibdesk.sourceforge.net/scripts.html, BibDesk AppleScript Repository}
@item @uref{http://bibdesk.sourceforge.net/manual/, Online Copy of This Manual}
@end itemize

@heading Appendices
@menu

* indexcp::             Concept Index
* indexpref::           Preference Settings Index
* indexky::             Keyboard Shortcut Index
* Character Conversion:: Character Conversion
* Autogeneration Format Syntax:: Autogeneration Format Syntax
@end menu

@shortcontents

@end ifnottex

Portions of BibDesk:

Copyright @copyright{} 2001 - 2005 Michael O. McCracken@*
Copyright @copyright{} many others@*

@c ======================================================================================

@node Quick Start
@chapter Quick Start 
@abstract{Quick start to BibDesk.}

Using BibDesk should be pretty natural for the average user of
BibTeX. Simply open your .bib file with BibDesk and start working. @xref{Managing References}
To get you up to speed faster, here are a few important features and
differences from other BibTeX editors.

@heading Accented Characters

@cindex accented characters
If you are used to writing LaTeX code for accented characters and
special fonts, you will be glad to know that BibDesk handles most of
that for you now. See @ref{Editing References}
for an overview, or @ref{Character Conversion} for more detail.

@heading Capitalized Letters in Fields

@cindex capitalization
If you use braces in your BibTeX fields to protect meaningful
capitalization, BibDesk attempts not to interfere. The braces will be
saved and any previews will show the intended capitalization.

Searches will match the string without the braces - a search for
"LaTeX" will match a publication with the title "@verb{.{L}a{T}e{X}.}".

@heading File Encodings

@cindex encodings
If you have a BibTeX file that is not stored with ASCII encoding,
BibDesk will work with the file's encoding. See @ref{encoding-notes}
for further information.

@heading Citation Keys

BibDesk can help you maintain useful and readable citation keys
painlessly. See @ref{Cite Key Preferences} for more information.

@heading Macro Support

@cindex macro
BibDesk supports BibTeX macros. See @ref{Editing Fields with Macros} and
@ref{Editing a Document's Macro Definitions} for more information on how to edit
them.

@heading Crossref Support

@cindex crossref support
BibDesk searches and sorts entries that utilize the BibTeX @samp{crossref} field,
and allows creating @samp{crossref} entries easily.  See @ref{Creating and Editing Crossrefs}
for information on adding @samp{crossref} links, and @ref{Crossref Preferences} for
configuring @samp{crossref} options.

@c ======================================================================================

@node BibTeX Intro
@chapter BibTeX Intro
@abstract{Introduction to BibTeX.}

@cindex BibTeX

BibTeX database files are in a text format with a few conventions you
will want to know. See @ref{Formatting Names} and
 @ref{Publication Types}) for answers to common questions.

It helps to know what the parts of a BibTeX file are. Here's a trivial
example to help illustrate. First we have a @emph{macro definition}:

@example
@@string@{PACT = "International Conference on Processors, Architectures and Compilation Techniques"@}
@end example

Next a single entry:
@example
@@proceedings@{pact02,
	    booktitle = PACT,
	    Year = 2002,
	    Month = sep,
	    Address = "Harvard Square"@}
@end example

The terminology we'll use to describe the entry is as follows:

@example
@@publication-type@{citation-key, field-name = value@}
@end example

Any value can be either a quoted string (using either @samp{""} or @samp{@{@}}) or a
number, or a macro (like @samp{PACT} in the above example).

@anchor{Publication Types}
@heading Publication Types

Each publication is assigned a type, which along with carrying some
information about the publication, determines how it will be formatted
later in conjunction with BibTeX styles.

@heading Citation Keys

A cite key is a unique identifier for a given reference.  BibTeX scans your document for
occurrences of a cite command with a cite key embedded in it, and translates it into a
properly formatted reference.  Several patterns are common
in choosing cite keys, from simple ones such as ``lastnameYEAR'' to more complicated
abbreviations of journal names and author names.  BibDesk will automatically
generate cite keys for you (@xref{Citation Keys}), or you can enter your own in the editor.
BibDesk takes a fairly strict interpretation of the valid characters for cite keys,
and the characters "@code{ "@@',\#@}@{~%}" (including the space character) are never allowed,
while you will be warned if you use one of "@code{&$^}" in a cite key.  Cite keys are
essentially TeX commands, so you should avoid using underscores, for instance, if you
ever need to print the actual cite key itself.

@heading Field Data

BibTeX defines numerous required and optional fields for each type, such as "Title" or "Author".  
BibDesk's editor will highlight the required fields in red, and optional fields are black.
Any field may be used with any type, however, and you can add your own fields to entries
and use them with custom bibliography styles.  For instance, you can add a "Keywords" field
to all of your entries, then modify a bibliography style to print out the list of keywords
in your bibliography.

Field entries are subject to limitations of TeX itself, and if you copy-and-paste a title 
with characters that are special to TeX, such as @samp{$}, errors will occur when
processing your file with BibTeX and TeX.  Other than that, any text is valid for a
BibTeX field, and is not limited to bibliographic information (some people store
addresses in a BibTeX database).

@anchor{Formatting Names}
@heading Formatting Names

Author and editor lists in BibTeX files are written as a single string
using the word "and" as a separator between names, like this example:

@example
"Adam Maxwell and Michael O. McCracken"
@end example

If a name has two parts, commas are used to determine which parts are
the first, middle and last names. For example, the following two names
are the same:

@example
"Adam Maxwell" "Maxwell, Adam"
@end example

BibTeX also handles more complicated names. Prefixes to given names
such as @samp{van} or @samp{van den} and suffixes such as @samp{Jr.} or @samp{III} are
OK:

@example
"van den Huevel, Johan A, Jr."
@end example

@heading BibTeX Macros

@cindex macro

Macros are a time saving feature that save typing when you have to
repeat the same long journal name over and over. If you define a
macro, you can just type the short version and BibTeX will substitute
the full version in processing.

Macro definitions look like this:
@example
@@string@{PACT = "International Conference on Processors, Architectures and Compilation Techniques"@}
@end example

To use the macro, just use the first part of the definition without quotes (here @code{PACT}) 
as the value for a field in the BibTeX file, as in the example above.

Note that in our example, we also used a macro @samp{sep}, which was not
defined in the example. Common three-letter month names are usually
defined appropriately in your @ref{Style Files} for the document's
language, and may also be abbreviated depending on the citation style.


BibDesk supports reading, editing and saving BibTeX macros. See
@ref{Editing Fields with Macros} for further information.

@heading BibTeX Crossrefs
@cindex crossref

Crossrefs are another time saving feature, and allow changes in a single
entry (here termed the "parent") to propagate to the entries which link to it 
(here termed the "children").

For example, this entry defines a single volume in a series of books, but is
missing some key information, such as Title and Author!  This is supplied by
the item whose cite key matches the @samp{Crossref} field's value.

@example 
@@book@{book-crossref,
	Crossref = @{whole-set@},
	Edition = @{Second@},
	Note = @{This is a cross-referencing BOOK entry@},
	Series = @{The Art of Computer Programming@},
	Title = @{Seminumerical Algorithms@},
	Volume = 2,
	Year = @{@{\noopsort@{1973c@}@}1981@}@}
@end example

Continuing our example, this parent entry contains the information common to
all of the books in the series:

@example
@@book@{whole-set,
	Author = @{Knuth, Donald E.@},
	Note = @{Seven volumes planned (this is a cross-referenced set of BOOKs)@},
	Publisher = @{Addison-Wesley@},
	Series = @{Four volumes@},
	Title = @{The Art of Computer Programming@},
	Year = @{@{\noopsort@{1973a@}@}@{\switchargs@{--90@}@{1968@}@}@}@}
@end example

One important caveat when working with crossreferences in BibTeX is that all parent
items must follow their children in the file.  BibDesk can sort the items for you
with @menutitle{Sort Publications for Crossrefs} in the Publication menu, or you can
allow BibDesk to automatically sort the items when saving (@xref{Crossref Preferences}).

@anchor{Style Files}
@heading Style Files

BibTeX uses style files (extension @code{.bst}) to produce formatted bibliographies
for various publishers.  You probably have numerous BibTeX styles installed on your
computer, and many more can be found on @uref{http://ctan.tug.org/, CTAN}, the
Comprehensive TeX Archive Network.

Writing your own BibTeX style files is possible, but not recommended for the
faint of heart (or even the not-so-faint of heart).  Patrick W. Daly's
@uref{http://www.ctan.org/tex-archive/macros/latex/contrib/supported/custom-bib/, custom-bib}
package is a valuable asset when you need a customized bibliography style, as it
walks you through a semi-automatic creation process.

@heading BibTeX References

The canonical reference for BibTeX itself is Oren Patashnik's
@uref{http://www.ctan.org/tex-archive/biblio/bibtex/contrib/doc/btxdoc.pdf, BibTeXing},
which you may have already as @uref{/usr/local/teTeX/share/texmf.tetex/doc/bibtex/base/btxdoc.dvi, btxdoc.dvi} 
in your TeX tree. Standard references such as @samp{The LaTeX Companion} are very
helpful in understanding and debugging BibTeX, and searching the
@uref{http://www.tex.ac.uk/cgi-bin/texfaq2html, TeX FAQ} is usually a
good idea as well.

@c ======================================================================================

@node Opening and Importing Files
@chapter Opening and Importing Files
@abstract{How to open and import files.}

@menu
* Starting a New File::
* Opening a File::
* Opening an RIS File::
* Importing From Other Programs::
@end menu

@c --------------------------------------------------------------------------------------

@node Starting a New File
@section Starting a New File
@abstract{Various ways of Creating a New File}

@cindex opening a new file
@kindex Shift-Cmd-N

Choose @menutitle{New Bibliography} from the File menu or 
type the keyboard shortcut @shiftcmd{N}.

@c --------------------------------------------------------------------------------------

@node Opening a File
@section Opening a File
@abstract{Opening a file.}

@cindex opening a file
@cindex open using filter
@kindex Cmd-O
@kindex Shift-Cmd-O

@subheading Opening a File in a Specific Encoding

Use the @menutitle{Open@dots{}} menu item in the @menutitle{File} menu, and select the encoding
you want to use from the popup menu at the bottom of the dialog
box.

@subheading Opening a File Using a Command-Line Filter

This feature lets you specify any command line that produces a BibTeX
file and open it in BibDesk directly. If you have command line
conversion tools from other formats, this is a handy way to use them.
For instance, suppose you have a file called @samp{searchresults.isi} in the ISI file format from
an online database.  Using the @uref{http://www.scripps.edu/~cdputnam/software/bibutils/bibutils.html, BibUtils}
suite of command line utilities (available here), you can translate that file into BibTeX with the following
command: @code{/usr/local/bin/isi2xml | /usr/local/bin/xml2bib}, with the paths adjusted appropriately for your
installation.  

@image{gfx/filterCmd}

The drop-down menu will save the last seven commands used, which should be sufficient for most needs!
Note that BibDesk can open RIS files directly, so a filter isn't required for them.

@c --------------------------------------------------------------------------------------

@node Opening an RIS File
@section Opening an RIS File
@abstract{Opening an RIS file.}

@cindex PubMed
@cindex RIS
@cindex service

BibDesk expects a file with the extension @samp{.fcgi} or @samp{.ris}.
Many of the RIS tags are converted into their BibTeX equivalents, but unknown tags are left as-is for you to deal with manually.
BibDesk's RIS import feature converts some HTML characters and tags into LaTeX commands, which can be handy when importing large
numbers of references; the LaTeX produced may be rather primitive, however.

@subheading PubMed

Just do your search as usual on
PubMed, and then select the settings as in the following image:

@image{gfx/pubmed}

The important settings are that it should be set to Display
@buttontitle{MEDLINE} and Send to @buttontitle{File}. Then click the
@buttontitle{Send to} button, and a file will
be saved to your download folder. You can then use BibDesk to open
this file. Once you have opened the file it cannot be saved back in
the same format. If you want to, you can save it as a BibTeX file, or
transfer the translated entries over into a BibTeX file that you use
permanently.

@subheading Other Online Databases

Many online databases have the capability to export RIS 
(the @uref{http://www.refman.com/support/risformat_intro.asp, Reference Manager format}), 
and BibDesk can open those files directly.
@uref{http://www.sonnysoftware.com/, SonnySoftware} offers a free application
called ``ReferenceMiner'' which searches PubMed, the Library of Congress, and
Amazon.  References can be dragged from ReferenceMiner directly into BibDesk's
publication list, which may be more convenient for those sources.

@subheading Using RIS Services

The Services menu items @menutitle{BibDesk > Add to Bibliography} and 
@menutitle{BibDesk > New Document With RIS}can be used from a text editor or 
web browser which supports Services to either add selected RIS text to an 
existing document, or create a new document based on the selected text.  
Further, RIS can be pasted or dragged directly into BibDesk's publication 
list as text, so at least one method should be convenient for your particular situation! 
BibDesk can also save RIS files directly, although some modification of 
the original source will occur, and this is only recommended
when it is necessary to share files with other people or applications.

@node Importing From Other Programs
@section Importing From Other Programs
@abstract{Importing bibliographies from programs such as EndNote and Bookends.}

@cindex importing
@cindex EndNote
@cindex Bookends

Some reference managers export bibliographies to BibTeX, but they do not add
cite keys to the references.  Unfortunately, BibDesk will fail to open such
files, and will display an error message when you attempt to open them.

To work around this problem, you can use BibDesk's
@menutitle{Import BibTeX Using Temporary Cite Keys...} menu item, found under
the @menutitle{File > Import} menu.  This uses a
regular expression to replace empty cite keys with a temporary key, in
a new BibTeX document.

After opening the file, a search for the temporary key is automatically performed,
to you can immediately see the items which were modified.  At present, the key
used is @samp{FixMe}, in case you need to search for it manually.  Proper cite keys
can then be generated for these items using @menutitle{Generate Cite Key} from the
@menutitle{Publication} menu.

@c ======================================================================================

@node Searching Your Database
@chapter Searching Your Database
@abstract{How to search your database.}

@heading Topics
@menu
* Quick Search::
* Advanced Search Options::
* Find and Replace::
@end menu

@node Quick Search
@section Quick Search

@cindex searching
@kindex Cmd-F

The quick search field lets you enter sub-strings that might be in
author names, titles or dates, and the reference view will display
only matching publications. There are several built-in options. For
example, "All Fields" (search every entry except the pub type at once),
Keywords (search the keywords entries) and Pub Type (search by pub
type).

@image{gfx/quickSearchField}

The quick search field is configurable by selecting @menutitle{Add Field@dots{}},
which allows you to add any string you want to the menu. If a
publication has that field, it will be searched. Adding the field
"Cite Key" (with that exact capitalization) will allow you to search
the citation key of publications. ("All Fields" also searches the
citation key.)

@node Advanced Search Options
@section Advanced Search Options

@cindex boolean search
@cindex accents in search
@cindex braces in search

BibDesk's quick search field also supports a Boolean search, using
@samp{+} for @samp{and} or @samp{|} for @samp{or} operators (no quotes), as
Apple's Help Viewer does in Mac OS X 10.4 and greater.
Please note that grouping is not supported at this
time.  If you do not explicitly search for accented characters, the
search feature will return results with accented characters, so it is
slightly fuzzy; further, case is ignored unless you explicitly enter
uppercase letters.  Sound confusing?  
For example, searching for @samp{Burger,} could return matches containing
@samp{R. B@ue{}rger} and @samp{J. Burger,} but not @samp{Hamburger.}  Searching for
@samp{B@ue{}rger} will only return items that match the case and accent exactly,
such as @samp{R. B@ue{}rger.}

As mentioned elsewhere, braces are ignored when searching, so searching
for @samp{BibDesk} will find @samp{@{B@}ib@{D@}esk} as well as @samp{BibDesk.}  Of course,
this will not find @samp{bibdesk}, since uppercase letters were used in this
example.

@node Find and Replace
@section Find and Replace

@cindex searching
@cindex regular expression
@cindex find and replace
@kindex Cmd-Shift-F

BibDesk supports Find and Replace operations on bibliographies, either on the entire
file or selected items.  Use the @menutitle{Find and Replace@dots{}} item of the 
@menutitle{Edit} menu (key shortcut @shiftcmd{F}) to show the find panel.

@image{gfx/findAndReplace}

In this panel, you can enter the name of a field to search (such as Author or Title),
and choose whether the search is case-sensitive and whether it searches only the
current selection or all items.  The @buttontitle{Find Next} button will highlight each
matching reference in turn, and the @buttontitle{Replace & Find} button will replace
the text in the currently selected entry and highlight the next match.  The
@buttontitle{Replace All} button will replace all entries matching the search, either
in the current selection or the entire file (depending on the check box).

Note that this feature is complementary to the @ref{Quick Search} feature, and does
not replace it.  For instance, the Find and Replace panel will not match cross-referenced
(inherited) fields, and does not strip accents or braces.  Further, searching by
"All Fields" is not possible at this time, since it doesn't make sense in the context of
the Find and Replace operation.

@heading Regular Expressions

The Find and Replace panel also supports Perl-compatible regular expressions, via the PCRE
library (see @uref{http://www.pcre.org/pcre.txt} for the manual pages).  If you are
unfamiliar with regular expressions, they are a very powerful tool for matching patterns
in text.  Numerous resources are available on the internet for learning regular expressions, 
such as this one: @uref{http://www.anybrowser.org/bbedit/grep.shtml}.

@heading Macro Find and Replace

Searching for BibTeX macros is also supported via the @samp{This is a Macro} checkbox next to
the Find and Replace text boxes.  For instance, if you have defined 
@samp{@@string@{jhe = "Journal of Hydraulic Engineering"@}} in your file, but decide to
replace "jhe" with "j-hydeng", you could search the "Journal" field for "jhe"
as a macro, and replace it with "j-hydeng" as a macro.

@subheading Examples

Here is a slightly more advanced example.  Suppose all of your BibTeX entries have a "Year" field
such as @samp{Year = @{1995@}}, but you want to replace these with @samp{Year = 1995}
(note the braces are removed in the second one).  To do this in BibDesk's editor, you
would open each entry, select the "Year" field, edit as raw BibTeX, and remove the
surrounding braces.  Using the Find panel, you could do the following, using the regular
expression search option:

@example
Find String:  @samp{([0-9]+)}  (uncheck "This is a Macro")
Replace With:  @samp{$0}  (check "This is a Macro")
@end example

This will set all of your "Year" fields containing one or more digits 0-9 to a number.
Since the $0 backreference matches the entire pattern captured in the "Find" operation,
you are just reinserting the previous value as a macro value.
 
Another useful example is searching for "Journal of Geophysical Research" as a 
non-macro, and replace it with "jgr" as a macro, now that BibDesk has full macro support
(@xref{BibTeX Intro} for more information on BibTeX macros).  Regular expressions
would not be necessary for this operation.

@c ======================================================================================

@node Managing References, Citation Keys, Searching Your Database, Top
@chapter Managing References
@abstract{How to manage the references in your database.}

@heading Topics

@menu
* Adding References::           
* Adding References From Text Sources::           
* Editing References::          
* Deleting References::    
* Browsing References::       
* Printing References::         
* Saving the File::             
* Previewing Typeset Output::   
* Identifying Duplicate References::
@end menu

@c --------------------------------------------------------------------------------------

@node Adding References
@section Adding References
@abstract{How to add new references to a database.}

@kindex Cmd-N

New references are added to the bibliography 
with @menutitle{New Reference} from the @menutitle{Publication} menu, the keyboard
shortcut @cmd{N}, or the @buttontitle{New Reference} toolbar button.
Any of these commands will open an editor window with fields for various reference types.

To add existing references to BibDesk, a variety of methods are outlined in
the following sections.

@menu
* Drag and Drop::
* Copy and Paste::
* Services::
@end menu


@node Drag and Drop
@subsection Drag and Drop

@cindex drag and drop
@cindex add to bibliography

References can also be added to a bibliography by dragging an entry
from a text source (text editor, web browser) into BibDesk's main publications
list.  The text can be BibTeX or RIS (Reference Manager) formatted text.
Here's a fancy picture:

@image{gfx/dragIntoBib}

References can be dragged from the main publications list (or another source)
and dropped on an editor window, as well, which will
only set non-empty fields of the publication; this can be quite useful when you are 
entering a number of items from a common source.  If you do want to overwrite all fields
when dragging to an editor, simply hold down the option key while you drag.

@node Copy and Paste
@subsection Copy and Paste

@cindex copy and paste
@cindex add to bibliography

References can be added to a publications list by copying them from another
source and pasting them into BibDesk's main window.  The text being pasted must
be BibTeX or RIS (Reference Manager) formatted text, or an error will occur.

@node Services
@subsection Services

@cindex service
@cindex add to bibliography

BibDesk also supports Mac OS X Services to add references to an existing bibliography.
Services are found under the application menu next to the Apple menu, and operate
on selected text.  

To use this feature, select BibTeX or RIS text in an application
that supports Services (such as OmniWeb), and choose the @menutitle{Add to Bibliography}
menu item of BibDesk's @menutitle{Services} submenu.
The selected text will be added to the frontmost document in BibDesk automatically.

@c --------------------------------------------------------------------------------------

@node Adding References From Text Sources
@section Adding References From Text Sources
@abstract{Adding new references from text sources.}

@cindex creating references, from pasteboard
@cindex creating references, from a file
@cindex creating references, from the web
@kindex Option-Cmd-L
@kindex Shift-Cmd-L
@kindex Cmd-L

@image{gfx/textImport}

If you have a source of references that isn't in a structured form,
you can use the @menutitle{Add New Publications from Pasteboard} menu item in the
@menutitle{Publication} menu (or the key shortcut @optcmd{L}) to open a
sheet that lets you add references by selecting text and assigning
that text to fields in a new reference. You can also choose the 
@menutitle{Add New Publications from File} menu item (key shortcut @shiftcmd{L}) 
to add references from an arbitrary text file, or the 
@menutitle{Add New Publications from Web} menu item (key shortcut @cmd{L}), 
to add publactions from a website. 

Examples of reference sources that this would be convenient for are
emails, conference proceedings web sites, and the text from a list of
citations at the end of a publication.

When the sheet opens, it loads the data on the clipboard into the
left-hand side of the sheet. If the last thing you've copied was text,
it will show that text. If the text is a URL, it will instead load
that URL and display the web page. If you know you want to use a web
page that is not on the clipboard, you can use the @menutitle{Add New
Publication from Web} menu item instead.

The @buttontitle{Open} button gives you the option to choose other sources of
information. If the sheet is displaying a website, there are navigation
controls, including back, forward, and a button for reload and stop.

Using the contextual menu on the web page, you can bookmark pages to
come back to at a later time, or save the URL of a link or the page
itself as the URL or Local-URL fields for the current publication.

The right hand side is a table representation of a publication. You
can choose its type and it will load the appropriate field names to
edit. As you add data, it will update the citation key with the
current suggested citation key according to the format set in the 
@ref{Cite Key Preferences} Preferences.
When you are done editing, choose @buttontitle{Add} to add the current
item to the document, then @buttontitle{Close} when you are done adding.

The sheet is designed to make this common task more efficient. Select
the text from the source on the left, and you can drag or copy and
paste into the table on the right to fill in the publication's
information. Edit and make any other changes you want by
double-clicking on the rightmost column of the table.

@kindex Cmd-0 - Cmd-9

You can make adding data faster by just double-clicking the name of
the field you want the selected text to fill and it will be added for
you. You can also use the key shortcuts @cmd{0} through @cmd{9} to
copy the selected text over to the corresponding field.

@c note: Double-clicking to transfer the data does not work for the webpage view yet.

@c --------------------------------------------------------------------------------------

@node Editing References
@section Editing References
@abstract{Editing the data in your references.}

@kindex Cmd-E

Once references have been added to the bibliography, they can be
edited by selecting a reference and choosing @menutitle{Edit Reference} from the
Bibliography menu, typing @cmd{E}, or double-clicking the
reference. When editing, changing pub type never loses information. In
other words, if you put a booktitle in when it was inproceedings, and
you change it to phdthesis, it will still have that booktitle.

This opens the Editor window, which looks something
like this:

@image{gfx/editWindow}

You can then fill in the appropriate fields for your reference. The
type pop-up menu lets you choose from the canonical BibTeX publication
types (e.g., article, book, phdthesis). Field titles highlighted in
red represent required fields for the chosen reference type (article
in the case of the above screenshot). Fields can be added and removed
with the plus and minus buttons to the right of the reference-type
pop-up menu. BibDesk fills in fields as you type based on the
information contained in other references. Also, BibDesk verifies that
cite keys are unique before committing a reference to the
bibliography.

@cindex URL
@cindex Local-URL
@cindex linked file, setting
@cindex linked file, viewing
@cindex PDF
@cindex previewing files
@cindex viewing PDF as text
@cindex drag and drop, files

@subheading Viewing a linked file

You can view a linked file in its appropriate application by clicking
on the @buttontitle{View File} button, which has the file's icon as its
image. If no file is linked, the icon is a question mark.

In either case, you can click and hold on the button to get a menu
which gives you options to choose a file to link. Another way of
setting the Local-URL link is by dragging a file onto the Edit window.

If your your linked file is a PDF, you can use the @buttontitle{View in Drawer}
button to view it without leaving BibDesk. Pressing and holding that
button gives you the option of viewing it as a PDF or viewing just
the text of the PDF, so you can select the text to copy and paste
into the data fields.

You can also view the web page specified in the ``URL'' field using
the @buttontitle{View in Drawer} button to view it in the drawer in BibDesk or
by clicking the @buttontitle{View Remote} button to open it in your preferred
web browser.

If you like to keep the URL set to the download location of the
paper, clicking and holding the @buttontitle{View Remote} button will show a
menu that lets you choose from the URLs of recently downloaded files
in Safari.

The @buttontitle{Annote} and @buttontitle{Abstract} tabs provide access to larger text areas
for these types of information. Rss-Description is covered in
@ref{Default Fields Preferences}.

Below the table view is the Notes pane, which shows the contents of
the highlighted reference. It can also be set (in the 
@ref{General Preferences} Preferences) to show the entire selected entry as nicely formatted
text.

@subheading Other editing topics

@menu
* Entering Accented Characters::  
* Editing Fields with Macros::  
* Editing a Document's Macro Definitions::  
* Creating and Editing Crossrefs::
@end menu


@node Entering Accented Characters
@subsection Entering Accented Characters
@abstract{Entering accented characters.}

@cindex accented characters

You can enter many common accented characters such as @ue{} and @oe{} directly, and 
BibDesk will take care of translating them into the appropriate LaTeX definitions when the file is saved.

They will also be re-translated upon reopening the file, so that you
will see the intended character, not the markup LaTeX uses to generate
it.


@node Editing Fields with Macros
@subsection Editing Fields with Macros
@abstract{How to edit a field as Raw BibTeX, to add macro references.}

@cindex macro
@kindex Cmd-R

@image{gfx/rawEdit}

You can edit a field as raw BibTeX by pressing @cmd{R} in the edit
window when one of the form fields has the keyboard focus.

See the @ref{BibTeX Intro} for more details on BibTeX with macros.

When a field is edited as raw BibTeX, an extra view is shown below the field. 
This shows the expanded value of the BibTeX string, or reports errors if the BibTeX 
string you entered is not valid BibTeX. 
Note that bare strings in raw BibTeX mode are surrounded by curly braces 
(`@{' and `@}') or double-quotes (`"'). 

The next time you try to edit a field that contains raw BibTeX, 
the field will automatically go into raw BibteX mode.
Text fields with raw BibTeX (e.g. a number or macro) is shown as dark blue
in the editor, to provide a quick visual reference.

@node Editing a Document's Macro Definitions
@subsection Editing a Document's Macro Definitions
@abstract{How to edit the definitions of a macro.}

@cindex macro
@cindex editing macros
@kindex Shift-Cmd-M

You can edit the macros of a document by choosing @menutitle{Macros} from the 
@menutitle{Window} menu, or typing the keyboard shortcut @shiftcmd{M}. 
See the @ref{BibTeX Intro} for more information of macros in BibTeX, and 
@ref{Editing Fields with Macros} on how to use macros in references. 

@image{gfx/macrosWindow}

Macro definitions consist of a pair of a macro key, which is used in 
the raw BibteX string, and a definition string. Note that the definition 
string is the expanded string value, so it does not include the surrounding 
braces of a raw BibTeX string. 

You can add a macro definition by pressing the @buttontitle{+} button. 
Pressing the @buttontitle{-} button removes the selected macro defintions. 
You can edit the key and the definition value by double clicking the 
corresponding cell in the table, or by pressing the return key when an item
is selected.

For quick searches through the list without using the mouse, you can type a
few characters of any word in the definition string you are looking for,
and that item will be selected for you.  This is helpful for looking up macro
keys when adding references.

@c --------------------------------------------------------------------------------------

@node Creating and Editing Crossrefs
@subsection Creating and Editing Crossrefs
@abstract{How to create and edit crossreferenced entries.}

@cindex crossref
@cindex crossref, drag-and-drop
@kindex Cmd-Opt drag

You can create a crossreferenced item using the BibTeX @samp{Crossref} field in
various ways.  To manually add a crossreference to an existing entry, add the
@samp{Crossref} field to the entry in the editor, then enter the cite key of the parent item.  
As an alternative, you can hold down the command and option keys and drag the 
parent item from the main publication list into the editor window of the child item.

To create a new crossreferenced item based on an existing item, you can also select the
parent item in the publication list and use @menutitle{New Publication With Crossref}
from the Publication menu or contextual menu.

Crossreferenced fields which are inherited from the parent publication are shown as
gray text in the editor, or light blue if they are macro values.  Inherited fields can
also be recognized by the gray arrow button in the editor field, which will open the parent
item for editing.

@c --------------------------------------------------------------------------------------

@node Deleting References
@section Deleting References

@cindex deleting

References can be deleted by selecting the reference and choosing
@menutitle{Delete Reference} from the Bibliography menu or pressing the delete
key. Either way, a warning will appear to verify that you want to
delete the reference, but delete operations are also undoable.

@c --------------------------------------------------------------------------------------

@node Browsing References
@section Browsing References
@abstract{Browsing references in your database.}

The references are presented in a table with a detail pane on the
bottom of the window. You can sort the table by column by clicking on
the name of each column, in the header of the table.

@image{gfx/tableView}

@cindex table, customizing
@cindex customizing
@cindex displaying custom fields
@cindex table columns

@subheading Customizing the Table

You can control the order of the columns by moving them directly.

To add a field that isn't displayed, use the column management
menu. There are three ways to access this menu; In the menu bar under
@menutitle{View > Columns}, by Control-clicking on a column name, or by
clicking the small button at the top right of the table.

It has a menu of fields you can add, or you can choose to add any
field that isn't listed by typing in the box. You can add a column for
any field you like, even if that field doesn't exist in any of the
publications listed.

You can also easily remove a column, by unchecking the columns name in 
one of the menus mentioned above. 

The Columns usually simply display the content of the relevant field.
There are a few special columns, where information is displayed that 
is more informative to the user. Below we discuss some of these special fields. 

@cindex Title
@subheading Title 

Normally, the Title column will display the content of a Title field, if it exists. 
There is one exception however, where BibDesk tries to `do the right thing' 
because of a BibTeX quirck. The inbook type uses Title to refer to the title of 
the whole work and the Chapter field to refer to the specific part of the 
work that is cited.  For the inbook type, then, if there is a Chapter field
that is displayed along with the Book title, thus:

@example
Chapter : Title
@end example

If Chapter is empty, Pages must be present so the Title column will display

@example
Title (pp Pages)
@end example

@cindex Container
@subheading Container 

The special column 'Container' can be added to the table.  It is useful for
types that are part of a larger document and displays the title of that
'Container' document.  It will display a slightly different field depending
on the type of the item.

@multitable @columnfractions .5 .5
@headitem Type @tab Container Field
@item article @tab Journal
@item incollection @tab Booktitle
@item inproceedings @tab Booktitle
@item conference @tab Booktitle
@item inbook @tab Title
@item book @tab Series 
@item commented @tab Volumetitle
@end multitable

If you use a special type that has a container concept write to bibdesk-develop@@lists.sourceforge.net
and it can be added. 

@cindex Local-Url
@cindex drag and drop, files
@subheading Local-Url

The Local-Url column is the column with the column with a little icon depicting a file in the header. 

The Local-Url column displays a little icon for a file that is linked through 
the Local-Url field, of course only if the Local-Url field is set. 
If the Local-Url field for an item is set, but the file could not be found 
on the system, the cell in the Local-Url column displays a file icon with a question mark. 
This way you can easily track missing linked files. 

When a cell in the Local-Url column is double-clicked, the linked file will be opened 
using the default application for the corresponding file type. 
The icon can also be dragged from the table to the Finder in order to copy it to another location, 
or it can be dragged into a specific application in the Dock to open the file in a specific application 
or perhaps mail it as an attachment.

@cindex Url
@cindex drag and drop, URLs
@subheading Url

The Url column is the column with the column with an @@-sign in the header. 

Similarly, the Url column displays a little webloc icon (a file icon with an @@-sign) 
when the Url field of the item is set. 

Double-clicking a cell in the Url column will open the linked remote URL 
in your default browser application.   

@cindex Date
@subheading Date

The Date column displays the date of the item, which is guessed from the Year and Month 
fields of the item. 

@cindex Item Number
@subheading Item Number 

The Item Number column shows a little #-mark in the header. The column displays the 
order of the item as it appears in the file. 

@c --------------------------------------------------------------------------------------

@node Printing References
@section Printing References
@abstract{Printing references}

@cindex printing
@kindex Cmd-P

Choosing @menutitle{Print} from the File menu (@cmd{P}) prints the contents
of the lower browser pane of the selected reference.  If you prefer to print the
contents of the LaTeX preview, bring that window to the front and choose
@menutitle{Print} from the File menu (@cmd{P}) to print the typeset preview contents.

@c --------------------------------------------------------------------------------------

@node Saving the File
@section Saving the File
@abstract{Saving files and dealing with encodings}

@cindex saving
@kindex Cmd-S
@kindex Shift-Cmd-S

@menutitle{Save} (@cmd{S}) and @menutitle{Save As@dots{}} (@shiftcmd{S}) under the @menutitle{File}
menu will save your bibliography as a BibTeX file. 

@cindex encoding
To save a file with an encoding other than the one it was read in,
use the @menutitle{Export BibTeX With Encoding} command, found in the 
@menutitle{Export} sub-menu of the @menutitle{File} menu, or @menutitle{Save As@dots{}} from the
@menutitle{File} menu (if you want to continue working with the file in a different encoding). 
Choose the encoding you want from the pop-up button at the bottom of the resulting sheet.

@c --------------------------------------------------------------------------------------

@node Previewing Typeset Output
@section Previewing Typeset Output
@abstract{Previewing the typeset output.}

@kindex Cmd-T

@cindex LaTeX
@cindex preview
@cindex RTF
@cindex style file
@cindex .bst

The preview panel shows you the currently selected references as a
formatted bibliography. The bibliography's format is based on the
current style file (set in the preference pane 
@ref{Preview Preferences}). This helps in spotting errors and omissions in your
references, as LaTeX and BibTeX are actually used to generate the PDF preview. 
The front matter and macros from the current bibliography document are
used for previewing.

@image{gfx/typesetPreview}

@image{gfx/typesetPreview-rtf}

The preview is available as PDF (generated by LaTeX), or as Text (actually RTF/Rich Text Format),
generated by LaTeX2RTF.  Since LaTeX2RTF only interprets a subset of LaTeX and BibTeX
commands and styles, results may vary for the Text preview, but its intent is to
provide a formatted reference list suitable for pasting directly into TextEdit or
similar programs.

An odd-sized page layout is used so that you don't have to scroll in order to see
the text, which allows you to have a smaller preview window.  However, this is not
desirable for printed output, so you may wish to edit the LaTeX template file
(see the @ref{Preview Preferences} preference pane for more details).

@c --------------------------------------------------------------------------------------

@node Identifying Duplicate References
@section Identifying Duplicate References
@abstract{How to identify duplicate references in a database.}

@cindex duplicate references
@cindex finding duplicates

To identify duplicate references in your database, use the @menutitle{Select Duplicates} item
of the @menutitle{Publication} menu.  BibDesk only considers items to be equal if their
BibTeX representations are identical (excluding BibDesk's added fields such as Local-Url).

For a large file, the analysis may take a few seconds, so be patient.  When BibDesk is done,
the duplicate items will be highlighted in the main publications list, and the number of duplicates
found will be visible in the status line at the bottom of the window.
You can delete the items directly, but we recommend that you cut-and-paste them to a new document
for review first!

For less conservative comparisons you will need to use a utility such as Gerd Neugebauer's 
@uref{http://www.gerd-neugebauer.de/software/TeX/BibTool.en.html, BibTool}, which allows
you to explicitly specify the criteria for determining if two references are identical.

@c ======================================================================================

@node Citation Keys
@chapter Citation Keys
@abstract{Controlling the automatic generation of citation keys.}

@cindex cite key
@cindex key

@heading Citation Key Generation

You can set the citation key to be automatically generated for a new
reference in the preferences (See the @ref{Cite Key Preferences} preference pane).

@menu
* When the Key is Generated::       When BibDesk automatically generates the key.
* Generating a Key for an Existing Publications::  How to force generating a key.
* Customizing the Format of Keys::  How to customize the way the key is generated. 
@end menu

@c --------------------------------------------------------------------------------------

@node When the Key is Generated
@section When the Key is Generated
@abstract{When the cite-key is generated.}

@cindex cite key
@cindex key

The key will be autogenerated only after all the necessary fields are set. 
Which fields are necessary to generate the key depends on the format 
that is used for the cite key. This format can be set in the 
@ref{Cite Key Preferences,Cite Key Preferences}.

Of course the key will never be automatically generated if you do not choose the 
autogenerate option in the @ref{Cite Key Preferences,Cite Key Preferences}.

When a key is automatically generated, a message will appear in the 
status bar of the Editor window, if that window is open and the 
status bar is shown. 

@c --------------------------------------------------------------------------------------

@node Generating a Key for an Existing Publications
@section Generating a Key for an Existing Publications
@abstract{Generating a cite key for an exisiting publication.}

@cindex cite key
@cindex key
@kindex Cmd-K

Cite keys can be generated automatically using the @ref{Cite Key Preferences,Cite Key Preferences}. 
Note that the BibDesk will only automatically generate a key when all the necessary 
information is supplied. 

If you want to force a cite key to be generated, for example when you do not have the 
autogeneration feature turned on, or you know you do not have the full bibliographical 
information, you can choose @menutitle{Generate Cite Key} from the @menutitle{Publication} 
menu (keyboard shortcut @cmd{K}), or from the action menu in the Editor for the item. 

@c --------------------------------------------------------------------------------------

@node Customizing the Format of Keys
@section Customizing the Format of Keys
@abstract{Customizing the format for generated cite keys.}

@cindex cite key format

For setting the format used to generate the key, 
see the @ref{Cite Key Preferences} preference help topic.
The syntax of the format is described in more detail in 
@ref{Autogeneration Format Syntax}. 

@c ======================================================================================

@node AutoFile
@chapter AutoFile
@abstract{Automatically file papers.}

@cindex autofile
@cindex file management
@cindex PDF
@cindex local copies of papers, organizing

@heading Keeping Local Copies of Papers Organized

This help page describes how to use the AutoFile feature to keep your
electronic copies of papers organized.  You will need to choose a
Papers Folder as described in the 
@ref{AutoFile Preferences} preference help topic.

@menu
* Automatically Move Files::    How BibDesk can keep new papers organized automatically once you've consolidated them.
* Consolidate Linked Files::    A command to move all linked files to your Papers Folder.
* Customizing the Format the Local-Url::  How to customize the generated location of used for AutoFile. 
@end menu

@c --------------------------------------------------------------------------------------

@node Automatically Move Files
@section Automatically Move Files
@abstract{How to automatically move papers.}

@cindex AutoFile

When linking a file by dragging and dropping it onto an edit window or
the publications table, or by using the Choose File button in the edit
window, AutoFile will try to automatically move the file to the Papers Folder
if the @buttontitle{File Papers Automatically} preference is selected, as
described in the @ref{AutoFile Preferences} preference help topic. 

Note however that the actual move can be delayed if not all the fields 
that are necessary to generate the new location are set. 
Which fields are necessary to generate the location depends on the format 
that is used for the Local-Url. This format can be set in the 
@ref{AutoFile Preferences,AutoFile Preferences}.

Of course the file will never be automatically moved if you do not choose the 
@buttontitle{File Papers Automatically} option in the 
@ref{AutoFile Preferences,AutoFile Preferences}.

When a file is automatically moved, a message will appear in the 
status bar of the Editor window, if that window is open and the 
status bar is shown. 

@c --------------------------------------------------------------------------------------

@node Consolidate Linked Files
@section Consolidate Linked Files
@abstract{How to consolidate linked files.}

@cindex consolidate linked files

Choose this command to scan all selected publications in the file for linked
files. A dialog will be opened that asks you for some options. 

If you choose @buttontitle{Move All}, all the linked files of selected items 
will be moved to the generated location, even if not all the fields necessary 
for the location are set. 

If you choose @buttontitle{Move Complete Only}, only the files for which 
all the fields necessary for generating the Local-Url are set will be moved. 
Which fields are necessary to generate the location depends on the format 
that is used for the Local-Url.

@image{gfx/consolidateLinkedFilesDialog}

If any files can not be moved or renamed for some reason, an error
dialog will show you what the problems were:

@image{gfx/consolidateLinkedFilesErrorWindow}

@cindex undo, autofile
@cindex autofile, undo
@cindex undo, consolidating linked files
@cindex consolidating linked files, undo

Consolidating linked files is undoable, so feel free to experiment.

You can also AutoFile a single linked file by choosing the 
@menutitle{Auto File Paper} menu item in the action menu 
of the Editor. 

@c --------------------------------------------------------------------------------------

@node Customizing the Format the Local-Url
@section Customizing the Format the Local-Url
@abstract{Customizing the format for the Local-Url}

For setting the format used to generate the new location for AutoFile, 
see the @ref{AutoFile Preferences} preference help topic.
The syntax of the format is described in more detail in 
@ref{Autogeneration Format Syntax}. 

@c ======================================================================================

@node Inserting Citations
@chapter Inserting Citations
@abstract{How to insert citations into other applications.}

@cindex copy and paste
@cindex drag and drop
@kindex Cmd-C
@kindex Cmd-V

You can copy a publication from the publication table and paste it
into any text editor to get the TeX citation command for that
publication's citation key. You can also drag and drop the
publications.

This also works for multiple publications at once. Multiple selections
produce a single citation containing the highlighted references (i.e.,
@code{\cite@{key1,key2@}}).

The @ref{Cite Key Preferences} allow for separate citations
(i.e., @code{\cite@{key1@}\cite@{key2@}}).

If you need a different citation command, then you will
want to use the Custom Citation Strings Drawer.

@menu
* The Custom Citation Strings Drawer::  
* Autocompletion::              
* System Service::              
@end menu

@c --------------------------------------------------------------------------------------

@node The Custom Citation Strings Drawer
@section The Custom Citation Strings Drawer
@abstract{How to manage and copy custom citation commands.}

@cindex	custom citation strings
@kindex Shift-Cmd-C

Choosing @menutitle{Show/Hide Custom Citation Strings} from the Window menu
(@shiftcmd{C}) toggles a drawer that allows you to drag and drop
citations into a TeX document using custom-defined citation strings,
such as @code{fullcite}, @code{citet}, and @code{citep}.

@image{gfx/citeDrawer}

Dragging a custom citation string from the drawer will put a LaTeX 
citation command for the currently selected items on the pasteboard, 
using the corresponding custom citation command rather than the 
default one. See @ref{Citation Preferences} for setting the 
default citation command and the command style to use. 

You can edit the list of custom citation strings from the drawer. 
To add a custom citation string, choose the @buttontitle{+} button. 
You can change the name of a citation string by double-clicking on the item. 
To remove a custom citation string, select the corresponding item 
in the table, and choose the @buttontitle{-} button. 

@c --------------------------------------------------------------------------------------

@node Autocompletion
@section Autocompletion
@abstract{Autocompletion in edits and external applications.}

@cindex autocompletion
@cindex autocomplete
@cindex problems with TextExtras
@cindex problems with iTeXMac
@cindex BBEdit
@cindex LyX

BibDesk can install a plugin that lets you search your database and
insert citation commands conveniently without leaving your text
editing application. @xref{External Autocompletion} to install
the plugin and manage the applications that use it.

@image{gfx/autocompleteExample}

@subheading What does it do?

Autocompletion ties into the regular dictionary autocompletion of
words on Mac OS X 10.3 and greater.  In Cocoa applications (such as
TextEdit), you can type a cite key followed by a text fragment, such as 
@samp{\cite@{bib} and hit the F5 function key to get a list of possible 
autocompletion entries containing the text @samp{bib}.

BibDesk's autocompletion provides possible matches based on the Title,
Author, Citekey, and Keywords of your currently open BibTeX files.  To
select an item, hit tab, return, comma, or closing brace as
appropriate.

If BibDesk is not running when you try to use the autocompletion feature,
it will launch automatically, and the default bibliography will be searched.
If you have not set a default bibliography in your preferences 
(@xref{General Preferences}), you will need
to open the desired file manually in order for this feature to work.

Note that on laptop keyboards, the "fn" key must
be used to get the actual F5 key behavior with the default keyboard
preferences.  Alternatives are to use option-escape, which will also
trigger autocompletion, or to set up a key binding for the
@code{complete:} selector (TextExtras can be used for this, but see
the caveat below).

@subheading Bonus feature: reference completion

The autocompletion input manager will also provide completion for TeX @code{\ref@{} and @code{\pageref@{}
commands, based on all @code{\label} commands in the same text file.  For instance, 
if you have a table labeled "@code{\label@{tab:myTable@}}", you can type "@code{See Table~\ref@{tab:m@}}", 
hit the same key sequence used for citekey autocompletion, and see a list of all 
matching entries pop up.  The autocompletion looks for up to seven matching 
characters, so the more you type, the fewer options you'll be presented with in the list.

@subheading Caveats and known issues

There is a conflict with the @uref{http://www.lorax.com/FreeStuff/TextExtras.html, TextExtras 1.7}
input manager at present.  The author of TextExtras is aware of the issue and working on a fix, 
but the only solution at present is to remove TextExtras or install an unsupported 
@uref{http://bibdesk.sourceforge.net/TextExtras_1.7BDSK.dmg, modified version}.

By default, @uref{http://itexmac.sourceforge.net, iTeXMac 1.3} does not support the keybinding for
autocompletion, but it can easily be made to work by adding a @code{complete:} keybinding to 
@code{~/Library/Application Support/iTeXMac/Key Bindings/TextKeyBinding.dict}.  
The following snippet binds control-u to autocompletion:

@code{<key>^u</key>} @*
@code{<string>complete:</string>}

@subheading Alternatives

For @uref{http://barebones.com/, BBEdit} users, Curt Clifton has written an AppleScript 
to provide similar functionality.  It can be obtained from 
@uref{http://www.cs.iastate.edu/~cclifton/software.shtml}.  

For @uref{http://www.lyx.org/, LyX} users, Mark Reid has written an AppleScript to push BibDesk citations
to LyX, and his script is available at @uref{http://www.threewordslong.com/projects/misc/bibdesktolyx/}.

Users who develop similar functionality for other applications are encouraged to post their 
scripts and e-mail a link to @uref{mailto:bibdesk-users@@lists.sourceforge.net}
for inclusion here.

@c --------------------------------------------------------------------------------------

@node System Service
@section System Service
@abstract{BibDesk System Services.}

@cindex system service
@cindex services

If you can't use the autocompletion plugin because your favorite text
editor is not compatible (for instance BBEdit or TextWrangler), you
will be able to use the installed OS X System Services to do much of
the same thing. 

The services also perform some searching functionality which can help
if you don't have a photographic memory of citation keys.

In any Services aware app (including: TeXShop, iTeXMac, TextEdit, 
BBEdit, and TextWrangler, but no Classic or X11 apps) type a
string, select it, then choose Complete Citation from the BibDesk
submenu of the Services Menu. This will replace the selected string
with the citation(s) of any entries in open BibDesk documents (or, if
BibDesk is not open yet, in the default bibliography set in
@ref{General Preferences} Preferences) whose titles contain that
string. So:

@image{gfx/serviceBefore}

becomes:

@image{gfx/serviceAfter}

You can search more than just the title from the service.
Both of the next two examples search for the string ``foo'' in the title:
@example
"foo"
@end example
@example 
"Title = foo"
@end example

The next example searches for a publication with ``Baz'' in the
author, ``foo'' in the title, and ``Jan'' in the month:

@example
"Author = Baz & Title = foo & Month = Jan"
@end example

Another service is available, called @menutitle{Complete Cite Key} which allows
you to highlight a part of a citation key and BibDesk will complete
the key for you. For instance, in our example , selecting
``CasO'' and invoking the @menutitle{Complete Cite Key}
service would insert ``CasObe00''.

@c ======================================================================================

@node Preferences Guide
@chapter Preferences Guide
@abstract{How to set preferences in BibDesk.}

@cindex preferences
@kindex Cmd-,

This help page describes options in the preferences you can use to
customize BibDesk. To change your preferences, choose @menutitle{Preferences}
from the @menutitle{BibDesk} menu, or press the key shortcut @cmd{,} (Command
- comma).

@heading Preference Panes

@menu
* General Preferences::        Change what BibDesk does when starting up, such as opening specific files.                
* Display Preferences::        Change the overall appearance of the main window.
* Citation Preferences::       Set what you get when copying or dragging citations to other apps.               
* Files Preferences::          Set preferences for opening and saving files.             
* Preview Preferences::        Change the default settings for using LaTeX in the typeset preview window.       
* Default Fields Preferences:: Add fields that BibDesk will add to every entry.         
* Crossref Preferences::       Customize Crossref support.         
* Cite Key Preferences::       Set a format for autogenerated cite keys.      
* AutoFile Preferences::       Set up a directory to automatically store copies of papers.         
* Autocompletion Preferences:: Install and configure the autocompletion system.           
@end menu

@c --------------------------------------------------------------------------------------

@node General Preferences
@section General
@abstract{Configuring Startup behavior}

@cindex startup behavior

This preference pane lets you control what BibDesk does when starting up. 
You can also control the overall appearance of the main window. 

@image{gfx/generalPrefs}

@prefitem{Application Launch} This controls what BibDesk does when it starts up. 
Clicking the @buttontitle{Open this bibliography} radio button prompts you to
choose a default bib file to open. 

@prefitem{Check for updates automatically} Selecting this makes BibDesk check for updates 
automatically at startup. 

@prefitem{Importing Bibliography Information} This option lets you decide whether to always immediately
open the edit window for an item you have pasted or dragged in. 
See @ref{Getting More Help} for information on the Error panel.

@c --------------------------------------------------------------------------------------

@node Display Preferences
@section Display
@abstract{Configuring Overall Appearance}

@cindex appearance
@cindex fonts

This preference pane lets you control the overall appearance of the main window. 

@image{gfx/displayPrefs}

@prefitem{Publication List} You can set the font family and size used in the publications list. 
In the table, you can add a custom set of words, such as 'the' and 'a', that will 
be ignored when sorting the table.

@prefitem{Preview Pane} Select what you want the lower pane of the main browser window to show. 
You can limit the maximal number of items to be shown in the lower pane. Note that generating the 
preview can be slow when many items are chosen. 
The Font family popup menu allows you to choose the font used for the preview pane. 

@c --------------------------------------------------------------------------------------

@node Citation Preferences
@section Citation
@abstract{Configuring Dragging and Citation Commands}

@cindex dragging
@cindex citation commands

The Citation preference pane lets you set what gets copied and dragged by default 
to other applcations from BibDesk. 

@image{gfx/citationPrefs}

@prefitem{Copying and Dragging} This controls what gets dropped (or copied) on a drag (or copy).

@itemize
@item BibTeX entry means the whole entry like: @code{@@misc@{key, author="" , @dots{} @}}.
@item TeX Citation means: @code{\cite@{cite-key@}}
@item PDF Description means the contents of the PDF Preview pane as a page of PDF.
@item RTF Description means the contents of the RTF Preview pane.
@end itemize

@prefitem{Cite Command Style} This lets you define the default cite command style that is used when dragging TeX cite commands from the publication table.

@itemize
@item The citation text field lets you change the string that is used when dragging from the publications table to whatever you like (e.g. citep or citet ...)
@item Bracket Style lets you choose to use square brackets for copy/paste and dragging citations, for compatibility with ConTeXt.
@item Separate Citations lets you choose whether to have bibdesk drop strings like \cite@{key1,key2@} or \cite@{key1@} \cite@{key2@} when multiple items are involved.
@end itemize

@c --------------------------------------------------------------------------------------

@node Files Preferences
@section Files
@abstract{Configuring Saving and Reading Defaults}

@cindex saving files
@cindex reading files

Using the Files preference pane you can change the way BibDesk saves and reads BibTeX files. 

@image{gfx/filesPrefs}

@prefitem{String Encoding} This popup menu allows you to select the encoding used to open 
BibTeX files by double-clicking on them in the Finder.

@anchor{encoding-notes}
Specific notes and warnings:

* Files will be run through the @ref{Character Conversion} process when 
opened so that accented characters display properly.

* This is the default behavior in BibDesk 0.97.2 and earlier versions.

* Files opened with a given encoding will be saved with that encoding.  
 To save with an alternate encoding, choose the
@menutitle{File > Export > Export BibTeX With Encoding@dots{}} menu option and select a particular encoding.  

@prefitem{Unicode to TeX Conversion} Characters will only be converted to TeX when this 
checkbox for character conversion is marked. Otherwise, they are written out as displayed in BibDesk.

The next four preference options control what data will be written when you save a BibTeX .bib file. 

@prefitem{Use normalized author names when saving} If you select this checkbox, author names 
will be saved in the standard BibTeX form 'von Last, Jr, First' in the .bib file. 
Note that author names containing macros will always be saved as they are entered, 
even if you select this option. 

@prefitem{Save Annote and Abstract fields at the end of the items} Selecting this option 
will ensure that the Annote and Abstract fields of any item is saved at the end of the 
record for that item in the BibteX file. As these fields can be long, choosing this option 
can restrict data loss on systems with restricted internal memory. 

@prefitem{Write template file at the front of every file when saving} If you select this 
option, the template file will be written at the front of every BibTeX file when it is saved. 
You can view and edit the template file by clicking the @buttontitle{Edit@dots{}} button. 

@prefitem{Automatically save RSS feeds} The RSS publishing preferences control the RSS export features. 
If you check this option, everytime you save a .bib file, a correspondingly named 
.rss file will be saved in the same directory. To find out more about RSS, follow the link 
@uref{href="http://www.cs.ucsd.edu/~mmccrack/AboutRSS.html}">.

@prefitem{Display warnings when opening a file} If you check this option, the warnings and errors 
will be shown automatically when you open a file that contains errors. Note that you can always check the 
errors and warning by showing the Error Panel, as described in @ref{Getting More Help}. 


@subheading Advanced

@menu
* Custom Character Conversions::
@end menu


@node Custom Character Conversions
@subsection Custom Character Conversions
@abstract{Configuring Custom Character Conversions}

@cindex character conversion

The Character Conversions Editor allows you to add characters to be converted 
between TeX and Unicode. See @ref{Character Conversion} for more details. 

You can open the Character Conversions Editor by choosing the 
``Custom character conversions'' button in the @ref{Files Preferences,Files Preferences}. 

@image{gfx/characterConversion}

BibDesk uses two sets of character conversions between TeX and Unicode. 
Conversions can occur in both directions, or they can occur only from 
Unicode to TeX. With the @menutitle{One-Way/Two-Way Conversions} popup you 
can choose the type of conversions to edit. 

The left column displays Unicode characters that BibDesk should convert to 
TeX. These can only be @emph{single} Unicode characters. 

Note that for two-way conversions, the TeX equivalent should @emph{always} 
start with @code{@{\} and end with @code{@}}. Therefore, the editor does not 
allow you to edit these characters when you are editing a two-way conversion. 

You can add a new character conversion by choosing the @buttontitle{+} button. 
Choosing the @buttontitle{-} button will remove the currently selected items. 

When you are done editing, you should choose the @buttontitle{OK} button 
to save your edits. If you choose the @buttontitle{Cancel} button, 
your changes will be lost. 

@subheading Notes

@itemize
@item If you want to convert a Unicode character to TeX that is not surrounded by 
@code{@{\} and @code{@}}, you can only add it as a one-way conversion.

@item A new conversion must first be made valid, before you can edit another entry. 
Note that duplicate characters are not allowed. In particular, you are not allowed 
to overwrite character conversions that BibDesk has defined internally. 

@item If you simply close the editor window, without choosing the @buttontitle{OK} or 
@buttontitle{Cancel} button, your changes will @emph{not} be saved, even though 
they will show up on a subsequent edit. 
@end itemize

@c --------------------------------------------------------------------------------------

@node Preview Preferences
@section Preview
@abstract{Configuring the Preview Settings}

@cindex preview settings

The Preview pane allows you to change the default settings for using 
LaTeX to generate the contents of the typeset preview window, as described in 
@ref{Previewing Typeset Output}.

@image{gfx/previewPrefs}

@prefitem{Generate previews using TeX} (More appropriately, use pdflatex for previewing.) 
If this is checked, the preview pane will be drawn.

If you do not have a TeX installation, clicking the @buttontitle{Download TeX@dots{}} button brings you to a 
webpage that tells you how to get it. 

@prefitem{TeX Program Locations} The TeX and BibTeX program paths can be changed here, 
so you are not tied to one distribution of TeX. You must enter the full path to the binaries for
 pdflatex and BibTeX, e.g. @code{/usr/local/teTeX/bin/powerpc-apple-darwin-current/pdflatex}.

@prefitem{BibTeX style} The BibTeX style file used for the previews (just the name, not the whole path) 
can be specified here.  This is a list of generic styles that may or may not exist on your system.  If
you need to use a style that is not in the menu, make sure it's in a location that TeX searches, (commonly
@code{~/Library/texmf/bibtex/bst}), and type the name of the style directly into the text box.

@prefitem{TeX template} Clicking the button lets you change the template file that is added to the beginning of every saved bib file. 
for generating the preview. This template file is a great place to put your macros, copyright info (if applicable), 
or shameless plugs for your software :)

@prefitem{TeX template encoding} The encoding popup lets you choose the encoding that is appropriate for the template file and the 
TeX program you are using. Note that the standard pdflatex and style files does not allow arbitrary 
Unicode characters. Therefore if you want to use other encodings then ASCII (TeX), you should 
modify the template and TeX command appropriately. 

@c --------------------------------------------------------------------------------------

@node Default Fields Preferences
@section Default Fields
@abstract{Configuring the Default Fields}

@cindex default fields

The Defaults pane lets you add new default BibTeX fields, that will be added to all entries. 
You can also control which field 
will be used for the description of RSS feeds, and edit BibDesk's global macro definitions
for all files.

@image{gfx/defaultsPrefs}

@prefitem{BibTeX Fields} You can set fields to be added to publications by default here. 
They are added when a file is opened and if a new publication is made. You can also choose 
the type of fields you added. Choose @samp{Local File} if the field should hold the URL for 
a file on your local file system. Choose @samp{Remote URL} if it should hold the URL of a remote 
location on the web. Those fields will behave much like the Local-Url or the Url field. 
Tip: Use this for fields you would like to use on every entry to avoid adding them every time. 
For example, a rating field or one that reminds you if you've read the cited paper.

@prefitem{Field to Use for RSS Description} This field will be used as the text that
shows up as the headline of each item in the RSS feed. By default it is the Rss-description field, 
but you can also supply here your own custom field. 

@prefitem{Custom BibTeX Types and Fields} Clicking the button allows you to add new types and add new fields 
to existing fields. 

@prefitem{Global BibTeX Macros} Clicking this button allows you to add global macro definitions. 

@subheading Advanced

@menu
* Custom Types and Fields::
* Editing Global Macro Definitions::
@end menu


@node Custom Types and Fields
@subsection Custom Types and Fields
@abstract{Configuring Custom Default Fields and Types}

@cindex custom types
@cindex custom fields
@cindex type info

The TypeInfo Editor allows you to add and manage custom types and fields to BibDesk. 
You can add new types, add new fields to existing types, or chnage the order in which 
BibDesk presents the types and fields. 

You can open the TypeInfo Editor by choosing the @buttontitle{Edit...} button 
under ``Advanced Custom BibteX types and fields'' 
in the @ref{Default Fields Preferences,Default Fields Preferences}. 

@image{gfx/typeInfo}

The Required Fields and Optional Fields tables list the fields for the 
currently selected type. 

You can add new types and fields by choosing the @buttontitle{+} buttons 
under the respective tables. You can remove selected typed or fields from 
one of the lists by choosing the appropriate @buttontitle{-} button. 

By dragging the entries, you can change the order in which the fields and 
types are presented to you in the Editor window.

Choosing the @buttontitle{Revert All To Default} button will revert all the 
types and fields to their default values. 
Choosing the @buttontitle{Revert Current To Default} button reverts only the 
fields for the currently selected types to the defaults. Note that this will 
remove all the fields for new custom types, but not the types themselves. 

When you are done editing, you should choose the @buttontitle{OK} button 
to save your edits. If you choose the @buttontitle{Cancel} button, 
your changes will be lost. 

@subheading Note

If you simply close the editor window, without choosing the @buttontitle{OK} or 
@buttontitle{Cancel} button, your changes will @emph{not} be saved, even though 
they will show up on a subsequent edit.


@node Editing Global Macro Definitions
@subsection Editing Global Macro Definitions
@abstract{How to edit BibDesk's global macro definitions.}

@cindex macros
@cindex global macros
@cindex copy and paste
@cindex drag and drop

BibDesk can maintain a separate store of macro definitions which are not
associated with a particular document.  Many users store their @samp{@@string}
definitions in a separate file, or perhaps maintain abbreviated and full versions
of the definitions.  Unfortunately, BibDesk doesn't know about the relationships
between these files, so the macros are only shown in their abbreviated form 
unless they are added to the global macro definitions.

Macro definitions can also be found in bibliography style files (@samp{.bst}
extension), such as this example from @samp{apalike.bst}:

@example
MACRO @{ibmjrd@} @{"IBM Journal of Research and Development"@}
@end example

These definitions, along with @samp{@@string} definitions, can be copied and pasted
or dragged into the global macro editor window.  In fact, you can paste the entire
contents of a @samp{.bst} or @samp{.bib} file into the window, and it will extract
the relevant parts for you!

If you want to add these definitions to a file, you can copy and paste or drag and
drop them into a document's macro editor as well (see @ref{Editing a Document's Macro Definitions}
for more details).  A document's definitions will always override the global definitions,
in case of a conflict.


@c --------------------------------------------------------------------------------------

@node Crossref Preferences
@section Crossref
@abstract{Configuring Crossref support}

@cindex crossref preferences

The Crossref pane lets you control some aspects of the Crossref support.

@image{gfx/crossrefPrefs}

@prefitem{Duplicate Title Field to Booktitle Field for Crossreferenced Types}  In a potential parent
item, BibDesk can copy the @samp{Title} field over to its @samp{Booktitle} field, when you create 
or edit it. This is a workaround for a BibTeX problem, and was suggested by BibDesk users. 
BibTeX uses the @samp{Title} field of an @samp{incollection} and ignores the @samp{Title}
field of the corresponding @samp{book} type (the parent item).  Copying allows any child item to
get all of the necessary information from its parent reference.

Since this alters your bibliography, the features is off by default, even though existing
entries won't be overwritten.

@prefitem{Overwrite the Booktitle} Always overwrite the @samp{Booktitle} field when duplicating 
the Title field, even if it is not empty.

@prefitem{Types for which to duplicate}  Duplication will only occur when editing the
types in this list, which are considered the potential parent items.  Use the @buttontitle{+} 
and @buttontitle{-} buttons below the list to add and remove items.  
Note that you need to click the checkbox to enable duplication before you can edit the list.

@prefitem{Automatically Sort for Crossrefs when saving BibTeX files}  When you select
this option, BibDesk will automatically place parent items at the end of your file,
as required by BibTeX.  If you use CVS to track changes to your bibliography, be aware
that this feature may introduce a large number of differences in your file!

@prefitem{Warn me when trying to edit inherited fields}  If this option is enabled,
BibDesk will warn you when you try to edit an inherited field.

@c --------------------------------------------------------------------------------------

@node Cite Key Preferences
@section Cite Key
@abstract{Configuring the Cite Key Autogeneration Feature}

@cindex cite key autogeneration

The Cite Key pane lets you control the Cite Key Autogeneration feature. 
You can set whether you want BibDesk to automatically generate cite keys 
for you. You can also control how the generated keys are contructed using a format string. 

@image{gfx/citeKeyPrefs}

@prefitem{Cite key Autogeneration} When you select the Autogenerate option, 
BibDesk will automatically generate cite keys for new items. The cite key will 
be build using a format string, which you can supply using the other controls. 
See @ref{Citation Keys} for more information about cite key autogeneration. 

@prefitem{Cite-Key Format} You can choose from several default cite key
formats. Choosing @menutitle{Custom} allows you to set the cite key
format string to any valid format.

For a more detailed control over the cite key generation, choose the 
@buttontitle{Advanced} button. This will reveal a editing sheet with 
the following additional items. 

@image{gfx/citeKeyPrefs-Advanced}

@prefitem{Preset Format} This is a copy of the popup button in the main pane.

@prefitem{Format String} This text field shows the cite key format
field that is used to automatically generate cite keys. The cite key
format string can contain several special format specifiers, which are
a %-character followed by a specifier character and optionally zero to
two numbers. See @ref{Autogeneration Format Syntax} for a
more detailed description of the syntax.

@prefitem{Choose a format specifier to add} This allows you to easily
add format specifiers at the end of the format string. This popup
button will only be visible in custom mode.

@prefitem{Generate lowercase cite keys} Selecting this option will generate 
cite keys in all lowercase characters. 

@prefitem{Clean by removing} You can set additional cleaning of generated parts 
of the parsed format string. Braces are normally used in BibTeX to protect parts of 
a string from capitalization. You can choose to remove those braces from the 
generated cite key. You can additionally choose to remove TeX commands. This will 
also remove the braces. 

@c --------------------------------------------------------------------------------------

@node AutoFile Preferences
@section AutoFile
@abstract{Configuring the AutoFile feature}

@cindex AutoFile

AutoFile lets you choose a folder as your "Papers Folder" to
automatically move files into when you link to them. You can do this
to all files at once, or automatically as they are added. Use this
preference pane to select the Papers Folder and to choose whether to
automatically move files. 

@image{gfx/autoFilePrefs}

@prefitem{Papers folder location} Papers that are automatically filed by BibDesk will 
be moved to this folder or a subfolder. The format string used to generate the location of the 
moved papers is relative to this folder. 

@prefitem{File papers automatically} When you select this option, BibDesk will automatically 
move files into the papers folder hierarchy for new items. The new location will be build 
using a format string, which you can supply using the other controls. 
See @ref{AutoFile} for more information about the Auto File feature. 

@prefitem{Local-Url Format} You can choose from several default cite key
formats. Choosing @menutitle{Custom} allows you to set the cite key
format string to any valid format.

For a more detailed control over the cite key generation, choose the 
@buttontitle{Advanced} button. This will reveal a editing sheet with 
the following additional items. 

@image{gfx/autoFilePrefs-Advanced}

@prefitem{Preset Format} This is a copy of the popup button in the main pane.

@prefitem{Format String} This text field shows the format string that is used to 
automatically generate new locations for auto filed papers. The Local-Url 
format string can contain several special format specifiers, which are
a %-character followed by a specifier character and optionally zero to
two numbers. See @ref{Autogeneration Format Syntax} for a
more detailed description of the syntax. This path is relative to the Papers Folder. 

@prefitem{Choose a format specifier to add} This allows you to easily
add format specifiers at the end of the format string. This popup
button will only be visible in custom mode.

@prefitem{Generate lowercase file names} Selecting this option will generate 
paths in all lowercase characters. 

@prefitem{Clean by removing} You can set additional cleaning of generated parts 
of the parsed format string. Braces are normally used in BibTeX to protect parts of 
a string from capitalization. You can choose to remove those braces from the 
generated cite key. You can additionally choose to remove TeX commands. This will 
also remove the braces. 

@c --------------------------------------------------------------------------------------

@node Autocompletion Preferences
@section Autocompletion
@abstract{Configuring the Autocompletion feature}

@cindex autocompletion, preferences

In the Autocompletion pane you can configure the autocompletion system. 
You can control which fields in BiDesk are autocompleted. You can also install 
and configure citations autocompletion for external applications. 

@menu
* Internal Autocompletion::
* External Autocompletion::
@end menu


@node Internal Autocompletion
@subsection Internal Autocompletion
@abstract{Autocompletion for edits in BibDesk}

@cindex internal autocompletion
@cindex autocompletion, internal

@image{gfx/autocompletePrefs-Internal}

@prefindex Internal Autocompletion

The table lists the fields for which autocompletion within BibDesk's editor is activated.
As you type, BibDesk can automatically complete fields based on other entries in your
file.  Note that if this dictionary ever gets corrupted due to a misspelling, relaunching
the application will rebuild the dictionary; if that doesn't work, you need to find the 
other misspelling!

At present, terms in the keywords field will be completed individually if they are separated 
by one of @code{;:,}, and authors will be completed individually as well.
Other fields are completed in their entirety.

You can enable autocompletion for other fields with the @buttontitle{+} button,
and the field name can be edited after double-clicking on the field in the table.  
Likewise, you can remove a field by selecting it and clicking the @buttontitle{-} button.
Some users find the completion feature really annoying, especially since it can't read your mind or
know what to type for you.  In this case you should remove all the fields from the list, or 
submit a patch to improve the code.

@node External Autocompletion
@subsection External Autocompletion
@abstract{Autocompletion of citation commands in other applications.}

@cindex external autocompletion
@cindex autocompletion, external

@image{gfx/autocompletePrefs-External}

@prefindex External Autocompletion

External autocompletion allows you to install a plugin which enables
bibliography-item autocompletion in Mac OS X 10.3 and greater using
the @buttontitle{Install} button.  

When the plugin has been installed, the button title changes to
@buttontitle{Reinstall} automatically. Autocompletion will only work in Cocoa
applications, such as the ones in the picture, and they must be added
to the list manually using the @buttontitle{Add} button below the list.  

If an application you have added to the list behaves strangely after
you add it, this is a clue that autocompletion is not compatible;
Apple's Stickies application is a good example of this.

@c ======================================================================================

@node AppleScript
@chapter AppleScript
@abstract{How to use AppleScript with BibDesk.}

@cindex AppleScript

@heading Topics

@menu
* Automating Tasks with AppleScript::
* Scripts Menu::
* Where to get Scripts::
@end menu

@c --------------------------------------------------------------------------------------

@node Automating Tasks with AppleScript
@section Automating Tasks with AppleScript
@abstract{How to automate tasks using AppleScript with BibDesk.}

@cindex using AppleScript
@cindex automating tasks

You can use @uref{http://www.apple.com/applescript, AppleScript} to write small programs, 
or scripts, to automate common tasks in BibDesk. For example, you can have a script 
process all the titles of your references, cleaning them up or capitalizing them. 
Or you can use a script to download bibliography information for references from the web. 
Scripts can be made accessible from the @ref{Scripts Menu}.

Here is an example of an AppleScript to process the titles of all selected references. 
(The definition of the subroutine to actually do the processing is not shown).

@example
@html
<span class="aslangkeyword">tell</span> <span class="asappkeyword">application</span> <span class="asvalue">"BibDesk"</span>
    <span class="aslangkeyword">set</span> <span class="asvariable">theSelection</span> <span class="aslangkeyword">to the</span> <span class="asappkeyword">selection</span> <span class="aslangkeyword">of</span> <span class="asappkeyword">document</span> <span class="asvalue">1</span>
    <span class="aslangkeyword">repeat with</span> <span class="asvariable">thePub</span> <span class="aslangkeyword">in</span> <span class="asvariable">theSelection</span>
        <span class="ascomment">-- accessing field values</span>
        <span class="aslangkeyword">set</span> <span class="asvariable">theTitle</span> <span class="aslangkeyword">to the</span> <span class="asappkeyword">value</span> <span class="aslangkeyword">of</span> <span class="asappkeyword">field</span> <span class="asvalue">"Title"</span> <span class="aslangkeyword">of</span> <span class="asvariable">thePub</span>
        <span class="ascomment">-- processString is a subroutine defined elsewhere in the script</span>
        <span class="aslangkeyword">set</span> <span class="asvariable">theTitle</span> <span class="aslangkeyword">to my</span> <span class="asvariable">processString</span><span class="asoperator">(</span><span class="asvariable">theTitle</span><span class="asoperator">)</span>
        <span class="aslangkeyword">set the</span> <span class="asappkeyword">value</span> <span class="aslangkeyword">of</span> <span class="asappkeyword">field</span> <span class="asvalue">"Title"</span> <span class="aslangkeyword">of</span> <span class="asvariable">thePub</span> <span class="aslangkeyword">to</span> <span class="asvariable">theTitle</span>
    <span class="aslangkeyword">end repeat</span>
<span class="aslangkeyword">end tell</span>
@end html
@ifnothtml
@b{tell} application "BibDesk"
    @b{set} theSelection @b{to the} selection @b{of} document 1
    @b{repeat with} thePub @b{in} theSelection
        @i{-- acessing fields}
        @b{set} theTitle @b{to the} value @b{of} field "Title" @b{of} thePub
        @i{-- processString is a subroutine defined elsewhere in the script}
        @b{set} thetitle @b{to my} processString(theTitle)
        @b{set the} value @b{of} field "Title" @b{of} thePub @b{to} theTitle
    @b{end repeat}
@b{end tell}
@end ifnothtml
@end example

A more extensive sample of AppleScript support for BibDesk can be found in the script @samp{BD test.scpt}. 
You can view it through the @uref{Scripts Menu}. 

To see the AppleScript commands you can use with BibDesk, open "Script Editor" 
(located in @code{Applications/AppleScript}). In "Script Editor", choose 
@menutitle{File > Open Dictionary} (shortcut @shiftcmd{O}) and select BibDesk in the dialog. 
You can also drag the BibDesk icon onto the "Script Editor" icon to open the dictionary.

@c --------------------------------------------------------------------------------------

@node Scripts Menu
@section Scripts Menu
@abstract{How to use the Scripts menu.}

@cindex Scripts menu

BibDesk has its own AppleScript menu, and scripts dedicated to BibDesk can be stored
in your home directory under @code{~/Library/Application Support/BibDesk/Scripts}.

To quickly open the scripts folder, select @menutitle{About the Scripts Menu} from
the @menutitle{Scripts} menu (which is shaped like the AppleScript icon on later
version of OS X).  Scripts added to this folder will show up in the menu without relaunching BibDesk.
You can also use this menu item to view a sample script explaining the most important 
AppleScript commands you can use with BibDesk. 

@c --------------------------------------------------------------------------------------

@node Where to get Scripts
@section Where to get Scripts
@abstract{Where to get Scripts for BibDesk.}

Various user-contributed scripts are located or linked from the BibDesk website here:
@uref{http://bibdesk.sourceforge.net/scripts.html, BibDesk AppleScript Repository}.
If you have a contribution that you would like to share, please e-mail the
@uref{mailto:bibdesk-users@@lists.sourceforge.net, BibDesk Users} mailing list with
a link to your page, and we'll make sure it gets added!

@c ======================================================================================

@node Getting More Help
@chapter Getting More Help
@abstract{Where to go to figure out problems.}

@cindex error panel
@cindex mailing list
@cindex bug reports

@heading The Error Panel

@kindex Shift-Cmd-E

The Error panel provides feedback on errors contained in a bib
file. You can always show the panel by selecting @menutitle{Show/Hide
Error Panel} from the Window menu (@shiftcmd{E}). This is
what the errors panel looks like:

Clicking on a warning line in this table opens an editing window with
the offending line highlighted.

@image{gfx/errorWindow}

@heading Mailing List

If your questions aren't answered in this help file, the
@uref{http://lists.sourceforge.net/lists/listinfo/bibdesk-users, bibdesk-users mailing list}
 may have an answer. Your question
may have been answered already, so you can check the 
@uref{http://sourceforge.net/mailarchive/forum.php?forum=bibdesk-users,list archives} 
to get instant gratification.

@heading Bug reports

You can submit a bug report to the bug tracker at 
@uref{http://sourceforge.net/projects/bibdesk/}.

The reports are most useful if they provide a clear description of
what went wrong, what you expected, and how to reproduce the problem
at a different computer without you there helping us.

If you're submitting a problem with how it handled a certain file, it
would help if you sent that file too, or at least the representative
subset that causes the errors. Crash reports are also useful and can
be obtained from the Console application (in `Applications/Utilities`).


@c ======================================================================================
@c INDEXES
@c ======================================================================================

@node indexcp
@appendix Concept Index
@abstract{Concept index.}
@printindex cp

@c ======================================================================================

@node indexpref
@appendix Preference Settings Index
@abstract{Preferences setting index.}
@printindex pref

@c ======================================================================================

@node indexky
@appendix Keyboard Shortcut Index
@abstract{Keyboard shortcuts index.}
@printindex ky

@c ======================================================================================

@node Character Conversion
@appendix Character Conversion
@abstract{Character conversions in BibDesk.}

@heading What is character conversion? 

BibDesk automatically converts many accented characters into their
TeXequivalents when it writes a BibTeX file. For instance, a u
with umlaut 
is converted to @code{@{\"u@}} when your file is saved, but presented as-is in
theinterface. There are some limitations on this process;
conversion only works when a @code{@{\} sequence is encountered, as in the
above example, and it only works if BibDesk has the conversion stored
in its internal dictionary.

@heading Accented characters and TeX 

The following table was taken from The
Not So Short Introduction to LaTeX2e> (Oetiker et al., 1999).
Depending on your TeX distribution, it may be available at
@code{/usr/local/teTeX/share/texmf.tetex/doc/latex/general/lshort.dvi}, 
or it is available from @uref{http://www.ctan.org/ctan/tex-archive/info/lshort/english/, CTAN}.

Many of the accents listed in this table can be applied to characters
other than o, as well.  

@image{gfx/accents}

Note: for BibTeX, it is also necessary to enclose the accent sequence in braces 
(see the @uref{http://www.tex.ac.uk/cgi-bin/texfaq2html?label=bibaccent, TeX FAQ}).

@c ======================================================================================

@node Autogeneration Format Syntax
@appendix Autogeneration Format Syntax
@abstract{The syntax of the format used for Cite Key and Local-Url AutoGeneration.}

@heading Syntax of the format

The format is used for autogeneration of certain values, such as the cite key 
and the local-url. The format is a string containing special format specifiers, 
which are replaced by strings determined by the bibliography data. 
Most format specifiers have the form of a %-character followed by a single character. 
It can be followed by optional digits, which serve as parameters for the format specifier. 
Possible format specifiers are given in the table below.

@c Some macro defintions used in the table

@macro spec {text}
@html
<span class="spec">\text\</span>
@end html
@ifnothtml
@b{\text\}
@end ifnothtml
@end macro

@macro param {text}
@html
<span class="param">\text\</span>
@end html
@ifnothtml
@i{\text\}
@end ifnothtml
@end macro

@macro specparam {spec, param}
@html
<span class="spec">\spec\</span><span class="param">\param\</span>
@end html
@ifnothtml
@b{\spec\}@b{\param\}
@end ifnothtml
@end macro

@macro specarg {spec, arg}
@html
<span class="spec">\spec\{</span><i>\arg\</i><span class="spec">}</span>
@end html
@ifnothtml
@b{\spec\@{}@i{\arg\}@b{@}}
@end ifnothtml
@end macro

@macro specargparam {spec, arg, param}
@html
<span class="spec">\spec\{</span><i>\arg\</i><span class="spec">}</span><span class="param">\param\</span>
@end html
@ifnothtml
@b{\spec\@{}@i{\arg\}@b{@}}@b{\param\}
@end ifnothtml
@end macro

@macro bold {text}
@html
<b>\text\</b>
@end html
@ifnothtml
@b{\text\}
@end ifnothtml
@end macro

@macro it {text}
@html
<i>\text\</i>
@end html
@ifnothtml
@i{\text\}
@end ifnothtml
@end macro

@ifhtml
@set specdescr blue
@set paramdescr green
@end ifhtml
@ifnothtml
@set specdescr bold
@set paramdescr italics
@end ifnothtml

@c End of macro definitions

@multitable {@b{%f\{}\i{Field}\b{\}0}} {Keywords concatenated together, with (optional) maximal number of keywords. Keywords must be separated by one of ;:, (semicolon, colon, or comma)}
@headitem Specifier @tab Replaced content description
@item @specparam{%a, [][]00}
@tab Author last names, with (optional) maximal number of authors and number of characters
@item @specparam{%A, [;][.][]0}
@tab Author last names with initials, with (optional) maximal number of authors
@item @specparam{%t, 0 }
@tab Title, with (optional) maximal length
@item @specparam{%T, 0 }
@tab Title, with (optional) maximal number of words
@item @spec{%y}
@tab Year without century
@item @spec{%Y}
@tab Year with century
@item @spec{%m}
@tab Month as decimal number
@item @specparam{%k, [/]0 }
@tab Keywords concatenated together, with (optional) maximal number of keywords. 
Keywords must be separated by one of ;:, (semicolon, colon, or comma)
@item @spec{%l}
@tab File name from Local-Url, without extension
@item @spec{%L}
@tab File name from Local-Url, with extension
@item @spec{%e}
@tab File extension from Local-Url (including the period)
@item @specargparam{%f, Field, [/]0 }
@tab Arbitrary field, with (optional) maximal length
@item @specargparam{%c, Field, 3}
@tab Arbitrary field as initials, e.g. @samp{JCIS} for @samp{J. of Colloid and Interface Science}, with (optional) length of words to ignore
@item @specparam{%r, 1}
@tab Random lowercase letter, with (optional) number of characters
@item @specparam{%R, 1}
@tab Random uppercase letter, with (optional) number of characters
@item @specparam{%d, 1}
@tab Random number, with (optional) number of digits
@item @specparam{%u, 1}
@tab Unique lowercase letter, with (optional) number of characters (only once)
@item @specparam{%U, 1}
@tab Unique uppercase letter, with (optional) number of characters (only once)
@item @specparam{%n, 1}
@tab Unique number, with (optional) number of characters (only once)
@item @spec{%0}
@tab Escaped digit (0-9)
@item @spec{%%}
@tab Escaped percent character (if allowed)
@item @spec{%[}
@tab Escaped square bracket (if allowed)
@item @spec{%]}
@tab Escaped square bracket character (if allowed)
@end multitable
@noindent
In the table above, @value{paramdescr} characters after the specifiers 
indicate the optional parameters (the first number after an author specifier, 
the number of authors, should be a single digit). Indicated in the table 
are the parameter values that are used when they are not entered. 

The special value of zero for an optional parameter is interpreted either as 
@emph{all} (for the @samp{author}, @samp{title}, or @samp{field} specifiers), 
@emph{sufficient} (for the @samp{unique} specifiers, i.e., sufficient to create a unique cite key), 
or @emph{none} (for the @samp{random} specifiers). 

The format can contain only a single one of the @samp{unique} specifiers 
@spec{%u}, @spec{%U} and @spec{%n}. 

The optional parameters delimited by square brackets after an author specifier 
can be used to control the separator between author names and an optional @samp{et al.} suffix. 
For @spec{%A}, the first one is the separator between two author names, 
and the second one is the separator between the last name and the first initial. 

In the local url format the slash-character (/) has a special meaning, as it is used 
to build the (UNIX style) folder hierarchy. This is usually not what you want generated 
parts of the format to do. Therefore in the @samp{author} and @samp{title} slashes 
are always replaced by dashes (-) for the local-url format. The same replacement is also 
performed by default for the @samp{keyword} or @samp{field} specifiers. 
These latter two however can have an optional parameters delimited by square brackets, 
which can be used to set the replacement string to another value. In particular, setting 
the argument between brackets to slash (/), no replacement will be made. This is also 
the default behavior in the cite key format.

Because a number right after most specifiers is interpreted as an optional parameter, 
in order to use explicit digits right after a format specifier, one should use one of 
the escape specifiers @spec{%0}-@spec{%9}. 

The cite key format can contain, apart from the specifiers, only unaccented 
alphanumeric characters (a-zA-Z0-9), (semi-)colons (:;), dashes (-), slashes (/) or periods (.). 
Any generated part of the cite key will be converted to contain only those characters. 
For example, accents are removed and spaces will be converted to dashes. 

The format for the local-url can contain any character apart from colons (:). 
To use an explicit percent character, use the escape specifier @spec{%%} 
(except inside an optional argument delimited by square brackets). Also note the special 
treatment of the slash (/) noted above. 

@heading Examples

@example
@emph{Bibliography:}
M. McCracken, A. Maxwell, J. Howison, M. Routley, S. Spiegel, S. S. Porst, and C. M. Hofman,
BibDesk, a great application to manage your bibliographies,
Source Forge, 1:96, 11 2004.
@end example

@table @asis
@item Format string:
@specparam{%a, 1}@bold{:}@spec{%Y}@specparam{%r,2}
@item Resulting value:
McCracken:2004yc
@end table

@table @asis
@item Format string:
@specparam{%a, 1}@bold{:}@spec{%Y}@spec{%u}
@item Resulting value:
McCracken:2004b
@end table

@table @asis
@item Format string:
@specparam{%a, 03}@spec{%y}@spec{%m}
@item Resulting value:
McCMaxHowRouSpiPorHof0411
@end table

@table @asis
@item Format string:
@specparam{%A, [;][.][;etal]2}@bold{:}@spec{%y}@specparam{%t, 20}
@item Resulting value:
McCracken.M;Maxwell.A;etal:2004BibDesk-a-great-appl
@end table

@table @asis
@item Format string:
@specparam{%a, [;][;etal]24}@bold{:}@specarg{%c,Journal}@specarg{%f, Volume}
@item Resulting value:
McCr;Maxw;etal:SF1
@end table

@heading Setting the cite key format

See the discussion in @ref{Cite Key Preferences} Preferences for
details on how to set the cite key format.


@bye

@c ======================================================================================
@c nothing past bye gets processed...
@c ======================================================================================

@multitable @columnfractions .12 .88
@item Portions of BibDesk
@item @tab Copyright @copyright{} 2001 - 2005 Michael O. McCracken@*
@item @tab Copyright @copyright{} 2002 - 2005 Adam Maxwell@*
@item @tab Copyright @copyright{} 2002 - 2005 Christiaan Hofman@* 
@item @tab Copyright @copyright{} many others.@*
@item @tab
@item Portions of this manual
@item @tab Copyright @copyright{} 2001 - 2005 Michael O. McCracken (manual)@*
@item @tab Copyright @copyright{} 2002 - 2005 Adam Maxwell@*
@item @tab Copyright @copyright{} 2002 - 2005 Christiaan Hofman@* 
@item @tab Copyright @copyright{} many others.@*
@end multitable
