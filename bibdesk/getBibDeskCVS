#!/usr/bin/perl -w

print "\n*******************************\n";
print "Welcome to BibDesk development.\n";
print "This script will get the stuff you need from cvs to build bibdesk.\n";
print "Developers should set SF_USERNAME to use ssh access\n";

$SFNAME=getSFName();

if ($SFNAME ne "") {
    prepdev();
} else {
    prepanon();
} 
$bibtag=gettag();

getsources();

print "\n****************************\n";                     
print "getBibdeskCVS done.  Now you should open\n";
print "bibdesk/Bibdesk.pbproj and commence the build.\n";
print "To Build you must have your Build Preferences set\n";
print "to \"Separate Location for Build Products\"\n\n";

sub getSFName {
  if (defined $ENV{'SF_USERNAME'} ) { 
	return $ENV{'SF_USERNAME'};
  } else {
      print "Are you a developer using ssh access (y/n)? ";
      $DEV = <STDIN>;
      if ( $DEV =~ /^n/ ) {
	  return "";
      } else {
         print "What is your sourceforge username (setenv SF_USERNAME for a default)?  ";
         $SFNAME = <STDIN>;
	 chomp($SFNAME);
         return $SFNAME;
      }
  }
}


# Set the BIB tag
sub gettag {
 if (defined $ENV{'SF_BIB_TAG'} ) {
   $bibtag = $ENV{'SF_BIB_TAG'};
 } else {
   print "Do you want a specific tag? (empty for none or enter tag(eg TRY_RTF_041503) ";
   $bibtag = <STDIN>;
 }
 chomp($bibtag);
 if ($bibtag eq "") {
   return $bibtag;
 } else {
   return "-r $bibtag";
 }
}

sub prepanon {
  $CVS_METHOD = "pserver";
  $SFNAME = "anonymous";
  $LOGIN = "cvs -z3 -d:$CVS_METHOD:$SFNAME\@cvs.sourceforge.net:/cvsroot/bibdesk login";
  print "$LOGIN\n";
  print "\nPassword is empty--just hit return when asked for a password\n";
  tryGet($LOGIN);
}

sub prepdev {
  $ENV{'CVS_RSH'} = 'ssh';
  $CVS_METHOD = "ext";
}

sub getsources {
   $GETMAIN = "cvs -z3 -d:$CVS_METHOD:$SFNAME\@cvs.sourceforge.net:/cvsroot/bibdesk co $bibtag bibdesk";
   tryGet($GETMAIN);

   $GETVENDOR = "cvs -z3 -d:$CVS_METHOD:$SFNAME\@cvs.sourceforge.net:/cvsroot/bibdesk co bibdesk_vendorsrc";
   tryGet($GETVENDOR);

}

sub tryGet {
  $toGet = shift;

  print "Executing: $toGet\n";
       
  if ( (system $toGet) != 0) { #return of 0 indicates success
     print "cvs failed.  Check messages above. Should I try again? (y/n)?";
     undef $tryAgain;
     $tryAgain = <STDIN>;
       
     if ($tryAgain =~  /^y/) {
       getsources();
     } else {
      print "cvs failed.  Please read messages above and";
      print " try again in a few moments\n";
      exit;
     }
  } 
}
