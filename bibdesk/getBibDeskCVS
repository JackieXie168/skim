#!/usr/bin/perl -w

print "\n*******************************\n";
print "Welcome to BibDesk development.\n";
print "This script will get the stuff you need from cvs to build bibdesk.\n\n";

$SFNAME=getSFName();

if ($SFNAME ne "") {
    prepdev();
} else {
    prepanon();
} 
$bibtag=gettag();

getsources();

print <<ENDHERE;

getBibdeskCVS done.  
****************************

Build Instructions
-----------------
(Also check http://bibdesk.sourceforge.net/wiki/index.php/BuildingFromCvs )

1. You must have the Cross Compling tools, which are a customize
   option during the Xcode install.  This avoids 
   "/Developer/SDKs/MacOSX10.4u.sdk does not exist" type errors
    
2. In Xcode, Set Build Preferences to "Separate Location for Build Products"
   (This is required by the OmniFrameworks, but is good practice anyway)

3. Remember to build the "Build me First" target before trying to 
   build the bibdesk target. (builds frameworks etc)
    
Do you want to open the project file (bibdesk/Bibdesk.xcodeproj) now? (y/n)
ENDHERE

system 'open bibdesk/Bibdesk.xcodeproj' if <STDIN> =~ /^y/;

sub getSFName {
  if (defined $ENV{'SF_USERNAME'} ) { 
	return $ENV{'SF_USERNAME'};
  } else {
      print "Are you a developer using ssh access (y/n)? ";
      $DEV = <STDIN>;
      if ( $DEV =~ /^n/ ) {
	  return "";
      } else {
         print "(You can set SF_USERNAME env var to avoid this question)\nWhat is your sourceforge username? ";
         $SFNAME = <STDIN>;
	 chomp($SFNAME);
         return $SFNAME;
      }
  }
}


# Set the BIB tag
sub gettag {
 if (defined $ENV{'SF_BIB_TAG'} ) {
   $bibtag = $ENV{'SF_BIB_TAG'};
 } else {
   print "(Set SF_BIB_TAG environment variable to avoid this question).\nDo you want a specific tag? (empty for HEAD or enter tag (eg BR_1x)\nCurrent development is BR_1x, HEAD is only for BibDesk2 (Core Data version) experimental)\n";
   $bibtag = <STDIN>;
 }
 chomp($bibtag);
 if ($bibtag eq "") {
   return $bibtag;
 } else {
   return "-r $bibtag";
 }
}

sub prepanon {
  $CVS_METHOD = "pserver";
  $SFNAME = "anonymous";
  $LOGIN = "cvs -z3 -d:$CVS_METHOD:$SFNAME\@cvs.sourceforge.net:/cvsroot/bibdesk login";
  print "$LOGIN\n";
  print "\nPassword is empty--just hit return when asked for a password\n";
  tryGet($LOGIN);
}

sub prepdev {
  $ENV{'CVS_RSH'} = 'ssh';
  $CVS_METHOD = "ext";
}

sub getsources {
   $GETMAIN = "cvs -z3 -d:$CVS_METHOD:$SFNAME\@cvs.sourceforge.net:/cvsroot/bibdesk checkout -P $bibtag bibdesk";
   tryGet($GETMAIN);

   $GETVENDOR = "cvs -z3 -d:$CVS_METHOD:$SFNAME\@cvs.sourceforge.net:/cvsroot/bibdesk checkout -P bibdesk_vendorsrc";
   tryGet($GETVENDOR);
   
   $GETINPUTMANAGER = "cvs -z3 -d:$CVS_METHOD:$SFNAME\@cvs.sourceforge.net:/cvsroot/bibdesk checkout -P bibdeskinputmanager";
   tryGet($GETINPUTMANAGER);

}

sub tryGet {
  $toGet = shift;

  print "Executing: $toGet\n";
       
  if ( (system $toGet) != 0) { #return of 0 indicates success
     print "cvs failed.  Check messages above. Should I try again? (y/n)?";
     undef $tryAgain;
     $tryAgain = <STDIN>;
       
     if ($tryAgain =~  /^y/) {
       getsources();
     } else {
      print "cvs failed.  Please read messages above and";
      print " try again in a few moments\n";
      exit;
     }
  } 
}
