
Notes About the Online Help
===========================

Node splitting and navigation
-----------------------------

The AppleHelp pages are split according to *sectioning commands*, such as chapter, section, subsection. 
Note that this is _not_ typically according to @node commands. As @node commands are used for linking, 
every sectioning commands should be accompanied by a @node command. 
To allow navigation to lower level nodes, there should be a menu for those lower level sectioning items. 
We typically add these menus just before these lower level sectioning commands start. 
This leads to the following type of outlines (similarly for @section/@subsection):

<example>

@node Chapter Title
@chapter Chapter Title
@abstract{Short Description}

@cindex conceptual keywords

some text...

@menu
* Section Title:: short explanation
...
@end menu

@node Section Title
@section Section Title
@abstract{Short Description}

@cindex conceptual keywords

some text...

(other sections)...

</example>

It is usually also a good idea to add the @abstract command. 
This is a macro that adds <META> information that is used for searches. 


Menu and button titles
----------------------

Use the @menutitle and @buttontitle macros to write any menu or button title. 
Now they simply quote the titles, but this allows us to easily change the style if we want to. 

Keyboard shortcuts
------------------

When you write keyboard shortcuts in the text, use the @cmd{}, @shiftcmd{}, and @optcmd{} 
macros. The argument is the key. Also add a @kindex command at the beginning of the 'node' 
to add an item to the key shortcut index. Use Cmd-, Shift-Cmd-, or Option-Cmd- prefixes for those. 

Preference items
----------------

To explain items in the preferences, we have paragraphs starting with a @prefitem{} command 
followed by some text explaining what the pref option is for. The @prefitem macro has the 
title of the item as argument. This should be the title appearing in the preference pane. 
The macro adds a colon at the end of the title. It also adds the item to the preference index. 
If you want to add an item to the preference index for which you have no title, 
use the command @prefindex. 

Texinfo help
------------

For more information about Texinfo see the online manual at 
http://www.gnu.org/software/texinfo/manual/texinfo/texinfo.html


Notes About the New Design
==========================

Notes about the .bdsk File Format Changes.

Now we have a separate NSDocument subclass (BDSKLibrary) and windowcontroller (BDSKLibraryController)

The preliminary code that was in BibDocument is obsolete and being moved over.

BDSKLibraryController only handles the source list and the search field and determining which class to use to display the current pubs.
The concept of which pubs are the current selected pubs belongs to the librarycontroller, which uses notifications to tell displayers when those change.

The classes that display pubs are BDSKItemDisplayControllers, and they have their own nibs.

Todo:

*** Current work (mike):

* I set up librarycontroller to change status string when selection changes, but the string isn't quite right.
 - not sure if the selectedItems is being set correctly...

*(related?): undo and display notifications aren't working quite right.

Later todos:

- Undo support for adding/removing collections in BDSKLibrary

- move the custom-cite drawer to an itemdisplaycontroller nib somewhere once we put that part of the tableview datasource somewhere. (Or should this be global, as yet another itemdisplaycontroller?)

- actual support for multiple itemdisplaycontrollers, and for matching the class that the currentCollection contains to what itemDisplayController we want to 

- write more itemdisplaycontrollers, including one that duplicates the current bibdocument functionality, and at least one for bibnote and bibauthor. BDSKExternalSources just provide bibitems, so they will be displayed by the same itemdisplaycontrollers as the bibitem collections.

- exporter creation/editing UI needs to be moved to BDSKLibraryController.

- write more exporters

- write importers

- UI for outlineview is important. There's lots of drag-n-drop I want to support: 
    - dragging files that contain bib data (.bib, .ris, .xml, etc) should be added as new collections
    - dragging external sources into the library should create new collections with the copied current contents to 'freeze' the external source, and leave the source itself alone.
    - dragging notes into the library should create new items, and there ought to be a nice UI for getting info from the notes efficiently into a structured form.
    - should support modifier keys, since sometimes you want to move and sometimes you want to copy items between collections. Which is the default? Probably try to echo iTunes here.

- flesh out bibnote and bdskremotesource classes.
