kernel vec4 sinkTransition(sampler src, sampler trgt, vec2 center, float t)
{
    float pi2 = radians(360.0);
    
    vec2 loc;
    float a, a1, a2, a3, a4, x, factor, r;
    vec4 extent, p1, p2;
    
    loc = destCoord() - center;
    r = sqrt(loc.x * loc.x + loc.y * loc.y);
    a = atan(loc.y, loc.x) - pi2 * t * t / (1.0 + 0.01 * r);
    a = a > -0.5 * pi2 ? a : a + pi2;

    extent = samplerExtent(src);
    extent.xy -= center;
    a1 = atan(extent.y + extent.w, extent.x);
    a2 = atan(extent.y + extent.w, extent.x + extent.z);
    a3 = atan(extent.y, extent.x + extent.z);
    a4 = atan(extent.y, extent.x);
    
    x = a > a1 ? ((a - a1) / (a4 + pi2 - a1)) : (a > a2 ? ((a - a2) / (a1 - a2)) : (a > a3 ? ((a - a3) / (a2 - a3)) : (a > a4 ? ((a - a4) / (a3 - a4)) : ((a - a1 + pi2) / (a4 - a1 + pi2)))));
    
    factor = 1.0 - (1.0 + (x * x * (1.0 - x) * (1.0 - x))) * t;
    factor = factor < 0.00000001 ? 0.00000001 : factor;
    r /= factor;
    loc = vec2(r * cos(a), r * sin(a));

    p1 = sample(src, samplerTransform(src, loc + center));
    p1 = loc.x < extent.x ? vec4(0.0) : (loc.x > extent.x + extent.z ? vec4(0.0) : (loc.y < extent.y ? vec4(0.0) : (loc.y > extent.y + extent.w ? vec4(0.0) : p1)));

    p2 = sample(trgt, samplerTransform(trgt, destCoord()));

    return p1 + (1.0 - p1.a) * p2;
}
